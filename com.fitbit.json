{
    "module_type": "org.thingpedia.v2",
    "params": {},
    "category": "online",
    "subcategory": "health",
    "types": [],
    "child_types": [],
    "auth": {
        "type": "oauth2"
    },
    "queries": {
        "getsteps": {
            "args": [
                {
                    "name": "date",
                    "type": "Date",
                    "question": "",
                    "is_input": true,
                    "required": false
                },
                {
                    "name": "steps",
                    "type": "Number",
                    "question": "",
                    "is_input": false,
                    "required": false
                }
            ],
            "doc": "retrieves the step count for the date",
            "confirmation": "your step count from your FitBit",
            "confirmation_remote": "$__person's step count from their FitBit",
            "canonical": "retrieve steps on fitbit",
            "formatted": [
                {
                    "type": "text",
                    "text": "Steps on ${date:date}: ${steps}"
                }
            ],
            "poll_interval": 3600000,
            "is_list": false
        },
        "getbody": {
            "args": [
                {
                    "name": "weight",
                    "type": "Measure(kg)",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "bmi",
                    "type": "Number",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "fat",
                    "type": "Number",
                    "question": "",
                    "is_input": false,
                    "required": false
                }
            ],
            "doc": "retrieve body measurements from Fitbit",
            "confirmation": "your body measurements from FitBit",
            "confirmation_remote": "$__person's body measurements from FitBit",
            "canonical": "retrieve body measurements on fitbit",
            "formatted": [
                {
                    "type": "text",
                    "text": "Weight: ${weight} kg, BMI: ${bmi}, Fat: ${fat}%"
                }
            ],
            "poll_interval": 3600000,
            "is_list": false
        }
    },
    "actions": {
        "recordweight": {
            "args": [
                {
                    "name": "weight",
                    "type": "Measure(kg)",
                    "question": "What is your weight?",
                    "is_input": true,
                    "required": true
                }
            ],
            "doc": "record weight on Fitbit",
            "confirmation": "record weight",
            "confirmation_remote": "record weight on $__person's fitbit",
            "canonical": "record weight on fitbit",
            "formatted": [],
            "poll_interval": -1,
            "is_list": false
        }
    },
    "examples": [
        {
            "utterance": "my steps from fitbit",
            "program": "let table x := @com.fitbit.getsteps();"
        },
        {
            "utterance": "my fitbit steps on $p_date",
            "program": "let table x := \\(p_date :Date) -> @com.fitbit.getsteps(date=p_date);"
        },
        {
            "utterance": "my body measurements from fitbit",
            "program": "let table x := @com.fitbit.getbody();"
        },
        {
            "utterance": "if my weight goes over $p_weight",
            "program": "let stream x := \\(p_weight :Measure(kg)) -> edge (monitor (@com.fitbit.getbody())) on weight >= p_weight;"
        },
        {
            "utterance": "log my weight on fitbit",
            "program": "let action x := @com.fitbit.recordweight();"
        },
        {
            "utterance": "record my weight on fitbit",
            "program": "let action x := @com.fitbit.recordweight();"
        },
        {
            "utterance": "make note of my weight on fitbit",
            "program": "let action x := @com.fitbit.recordweight();"
        },
        {
            "utterance": "when my weight changes on fitbit",
            "program": "let stream x := monitor (@com.fitbit.getbody()) on new [weight];"
        },
        {
            "utterance": "when I walk more than ${p_steps:const} steps",
            "program": "let stream x := \\(p_steps :Number) -> edge (monitor (@com.fitbit.getsteps())) on steps >= p_steps;"
        },
        {
            "utterance": "when my fitbit steps update",
            "program": "let stream x := monitor (@com.fitbit.getsteps());"
        }
    ]
}
