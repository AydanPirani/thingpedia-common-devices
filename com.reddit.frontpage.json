{
    "module_type": "org.thingpedia.v1",
    "params": {},
    "category": "data",
    "subcategory": "media",
    "types": [],
    "child_types": [],
    "auth": {
        "type": "none"
    },
    "triggers": {},
    "actions": {},
    "queries": {
        "get": {
            "args": [
                {
                    "name": "title",
                    "type": "String",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "link",
                    "type": "URL",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "user",
                    "type": "Entity(tt:username)",
                    "question": "What user do you want to monitor? Use the /u/ notation.",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "category",
                    "type": "String",
                    "question": "What sub-reddit do you want to monitor? Use the /r/ notation.",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "updated",
                    "type": "Date",
                    "question": "",
                    "is_input": false,
                    "required": false
                }
            ],
            "doc": "Url of link to Reddit comments whenever a post reaches the front page.",
            "confirmation": "a post reaches the front page on Reddit",
            "confirmation_remote": "",
            "canonical": "new post on reddit front page",
            "formatted": [
                {
                    "type": "rdl",
                    "webCallback": "${link}",
                    "displayTitle": "${title}",
                    "displayText": "By /u/${author}. In /r/${category}."
                }
            ],
            "poll_interval": 300000
        }
    },
    "examples": [
        {
            "utterance": "when reddit front page updates",
            "program": "let stream x := monitor (@com.reddit.frontpage.get());"
        },
        {
            "utterance": "when a new post in category $p_category reaches reddit front page",
            "program": "let stream x := \\(p_category :String) -> monitor ((@com.reddit.frontpage.get()), category == p_category);"
        },
        {
            "utterance": "when a new post from user $p_user reaches reddit front page",
            "program": "let stream x := \\(p_user :Entity(tt:username)) -> monitor ((@com.reddit.frontpage.get()), user == p_user);"
        },
        {
            "utterance": "the front page of reddit",
            "program": "let table x := @com.reddit.frontpage.get();"
        },
        {
            "utterance": "front page posts by $p_user on reddit",
            "program": "let table x := \\(p_user :Entity(tt:username)) -> (@com.reddit.frontpage.get()), user == p_user;"
        },
        {
            "utterance": "front page posts in $p_category on reddit",
            "program": "let table x := \\(p_category :String) -> (@com.reddit.frontpage.get()), category == p_category;"
        },
        {
            "utterance": "reddit front page posts published in the last hour",
            "program": "let table x := (@com.reddit.frontpage.get()), updated >= start_of(h);"
        },
        {
            "utterance": "the latest posts in the reddit front page",
            "program": "let table x := @com.reddit.frontpage.get();"
        }
    ]
}
