{
  "module_type": "org.thingpedia.v2",
  "params": {},
  "category": "online",
  "subcategory": "social-network",
  "types": [],
  "child_types": [],
  "auth": {
    "type": "oauth2"
  },
  "triggers": {},
  "actions": {
    "send_direct_message": {
      "args": [
        {
          "name": "to",
          "type": "Username",
          "question": "Who do you want to send the message to?",
          "is_input": true,
          "required": true
        },
        {
          "name": "message",
          "type": "String",
          "question": "What message do you want to send?",
          "is_input": true,
          "required": true
        }
      ],
      "doc": "send a direct message",
      "confirmation": "send a direct message on Twitter to $to saying $message",
      "confirmation_remote": "send a direct message on $__person's Twitter to $to saying $message",
      "canonical": "send dm on twitter",
      "formatted": [],
      "poll_interval": 0,
      "label": null
    },
    "post_picture": {
      "args": [
        {
          "name": "caption",
          "type": "String",
          "question": "What do you want to tweet?",
          "is_input": true,
          "required": true
        },
        {
          "name": "picture_url",
          "type": "Picture",
          "question": "Upload the picture now.",
          "is_input": true,
          "required": true
        }
      ],
      "doc": "post a tweet with a picture",
      "confirmation": "tweet $caption with an attached picture",
      "confirmation_remote": "post $caption and a picture on $__person's Twitter",
      "canonical": "post picture on twitter",
      "formatted": [],
      "poll_interval": 0
    },
    "follow": {
      "args": [
        {
          "name": "user_name",
          "type": "Username",
          "question": "What user do you want to follow?",
          "is_input": true,
          "required": true
        }
      ],
      "doc": "follow the named user",
      "confirmation": "follow $user_name on Twitter",
      "confirmation_remote": "follow $user_name with $__person's Twitter",
      "canonical": "follow on twitter",
      "formatted": [],
      "poll_interval": 0
    },
    "unfollow": {
      "args": [
        {
          "name": "user_name",
          "type": "Username",
          "question": "What user do you want to unfollow?",
          "is_input": true,
          "required": true
        }
      ],
      "doc": "stop following the named user; this call succeeds even if the user was already followed before",
      "confirmation": "unfollow $user_name on Twitter",
      "confirmation_remote": "unfollow $user_name from $__person's Twitter",
      "canonical": "unfollow on twitter",
      "formatted": [],
      "poll_interval": 0
    },
    "post": {
      "args": [
        {
          "name": "status",
          "type": "String",
          "question": "What do you want to tweet?",
          "is_input": true,
          "required": true
        }
      ],
      "doc": "post a tweet; use # to include a hashtag and @ to reply",
      "confirmation": "tweet $status",
      "confirmation_remote": "post $status on $__person's Twitter",
      "canonical": "post on twitter",
      "formatted": [],
      "poll_interval": 0,
      "label": null
    },
    "retweet": {
      "args": [
        {
          "name": "tweet_id",
          "type": "Entity(com.twitter:id)",
          "question": "What tweet do you want to retweet?",
          "is_input": true,
          "required": true
        }
      ],
      "doc": "retweet a given tweet, by id",
      "confirmation": "retween $tweet_id",
      "confirmation_remote": "retweet $tweet_id on $__person's Twitter Account",
      "canonical": "retweet",
      "formatted": [],
      "poll_interval": 0
    }
  },
  "queries": {
    "search": {
      "args": [
        {
          "name": "query",
          "type": "String",
          "question": "What tweets do you want to search?",
          "is_input": true,
          "required": true
        },
        {
          "name": "count",
          "type": "Number",
          "question": "How many tweets do you want?",
          "is_input": true,
          "required": false
        },
        {
          "name": "text",
          "type": "String",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "hashtags",
          "type": "Array(Hashtag)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "urls",
          "type": "Array(URL)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "from",
          "type": "Username",
          "question": "From which user do you want tweets?",
          "is_input": false,
          "required": false
        },
        {
          "name": "in_reply_to",
          "type": "Username",
          "question": "In reply to which user do you want tweets?",
          "is_input": false,
          "required": false
        },
        {
          "name": "tweet_id",
          "type": "Entity(com.twitter:id)",
          "question": "",
          "is_input": false,
          "required": false
        }
      ],
      "doc": "search recent tweets; default is 5",
      "confirmation": "search $query on Twitter",
      "confirmation_remote": "search $query on $__person's Twitter",
      "canonical": "search on twitter",
      "formatted": [
        {
          "type": "text",
          "text": "@${from} tweeted: ${text}"
        }
      ],
      "poll_interval": 600000
    },
    "search_by_hashtag": {
      "args": [
        {
          "name": "query_hashtag",
          "type": "Hashtag",
          "question": "What hashtag do you want to search?",
          "is_input": true,
          "required": true
        },
        {
          "name": "count",
          "type": "Number",
          "question": "How many tweets do you want?",
          "is_input": true,
          "required": false
        },
        {
          "name": "text",
          "type": "String",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "hashtags",
          "type": "Array(Hashtag)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "urls",
          "type": "Array(URL)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "from",
          "type": "Username",
          "question": "From which user do you want tweets?",
          "is_input": false,
          "required": false
        },
        {
          "name": "in_reply_to",
          "type": "Username",
          "question": "In reply to which user do you want tweets?",
          "is_input": false,
          "required": false
        },
        {
          "name": "tweet_id",
          "type": "Entity(com.twitter:id)",
          "question": "",
          "is_input": false,
          "required": false
        }
      ],
      "doc": "search recent tweets by hashtag; default is 15",
      "confirmation": "search for hashtag $query_hashtag on Twitter",
      "confirmation_remote": "search for hashtag $query_hashtag on $__person's Twitter",
      "canonical": "search by hashtag on twitter",
      "formatted": [
        {
          "type": "text",
          "text": "@${from} tweeted: ${text}"
        }
      ],
      "poll_interval": 600000
    },
    "home_timeline": {
      "args": [
        {
          "name": "text",
          "type": "String",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "hashtags",
          "type": "Array(Hashtag)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "urls",
          "type": "Array(URL)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "from",
          "type": "Entity(tt:username)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "in_reply_to",
          "type": "Entity(tt:username)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "tweet_id",
          "type": "Entity(com.twitter:id)",
          "question": "",
          "is_input": false,
          "required": false
        }
      ],
      "doc": "shows your Twitter timeline (the home page of Twitter)",
      "confirmation": "get tweets from anyone you follow",
      "confirmation_remote": "get tweets from anyone $__person's follow",
      "canonical": "twitter home timeline",
      "formatted": [
        {
          "type": "text",
          "text": "@${from} tweeted: ${text}"
        }
      ],
      "poll_interval": 0
    },
    "my_tweets": {
      "args": [
        {
          "name": "text",
          "type": "String",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "hashtags",
          "type": "Array(Hashtag)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "urls",
          "type": "Array(URL)",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "in_reply_to",
          "type": "Username",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "tweet_id",
          "type": "Entity(com.twitter:id)",
          "question": "",
          "is_input": false,
          "required": false
        }
      ],
      "doc": "get your recent tweets",
      "confirmation": "get tweets from you",
      "confirmation_remote": "get tweets from $__person",
      "canonical": "my tweets on twitter",
      "formatted": [
        {
          "type": "text",
          "text": "You tweeted: ${text}"
        }
      ],
      "poll_interval": 0
    },
    "direct_messages": {
      "args": [
        {
          "name": "from",
          "type": "Username",
          "question": "",
          "is_input": false,
          "required": false
        },
        {
          "name": "message",
          "type": "String",
          "question": "",
          "is_input": false,
          "required": false
        }
      ],
      "doc": "get recent direct messages you received",
      "confirmation": "get direct messages from Twitter",
      "confirmation_remote": "get $__person's direct messages from Twitter",
      "canonical": "twitter direct messages",
      "formatted": [
        {
          "type": "text",
          "text": "@${from}: ${message}"
        }
      ],
      "poll_interval": 0
    }
  },
  "examples": [
    {
      "utterance": "when someone i follow tweets",
      "program": "let stream x := \\() -> monitor @com.twitter.home_timeline();"
    },
    {
      "utterance": "when user ${p_from} tweets ",
      "program": "let stream x := \\(p_from :Username) -> monitor @com.twitter.home_timeline(), from == p_from;"
    },
    {
      "utterance": "when someone i follow replies to user ${p_in_reply_to} on twitter",
      "program": "let stream x := \\(p_in_reply_to :Username) -> monitor @com.twitter.home_timeline(), in_reply_to == p_in_reply_to;"
    },
    {
      "utterance": "when i receive a direct message on twitter",
      "program": "let stream x := \\() -> monitor @com.twitter.direct_messages();"
    },
    {
      "utterance": "when i receive a direct message from ${p_from} on twitter",
      "program": "let stream x := \\(p_from :Username) -> monitor @com.twitter.direct_messages(), from == p_from;"
    },
    {
      "utterance": "if i receive a dm on twitter from ${p_from}",
      "program": "let stream x := \\(p_from :Username) -> monitor @com.twitter.direct_messages(), from == p_from;"
    },
    {
      "utterance": "when i tweet",
      "program": "let stream x := \\() -> monitor @com.twitter.my_tweets();"
    },
    {
      "utterance": "when i reply to ${p_in_reply_to} on twitter",
      "program": "let stream x := \\(p_in_reply_to :Username) -> monitor @com.twitter.my_tweets(), in_reply_to == p_in_reply_to;"
    },
    {
      "utterance": "tweets matching ${p_query} on twitter",
      "program": "let table x := \\(p_query :String) -> @com.twitter.search(query=p_query);"
    },
    {
      "utterance": "${p_query:const} tweets",
      "program": "let table x := \\(p_query :String) -> @com.twitter.search(query=p_query);"
    },
    {
      "utterance": "recent tweets from ${p_from} ",
      "program": "let table x := \\(p_from :Username) -> @com.twitter.search(), from == p_from;"
    },
    {
      "utterance": "recent tweets from ${p_from} matching ${p_query}",
      "program": "let table x := \\(p_from :Username, p_query :String) -> @com.twitter.search(query=p_query), from == p_from;"
    },
    {
      "utterance": "recent tweets in reply to ${p_in_reply_to}",
      "program": "let table x := \\(p_in_reply_to :Username) -> @com.twitter.search(), in_reply_to == p_in_reply_to;"
    },
    {
      "utterance": "recent tweets in reply to ${p_in_reply_to} matching ${p_query}",
      "program": "let table x := \\(p_in_reply_to :Username, p_query :String) -> @com.twitter.search(query=p_query), in_reply_to == p_in_reply_to;"
    },
    {
      "utterance": "tweets with hashtag ${p_query_hashtag} on twitter",
      "program": "let table x := \\(p_query_hashtag :Hashtag) -> @com.twitter.search_by_hashtag(query_hashtag=p_query_hashtag);"
    },
    {
      "utterance": "tweets with hashtag ${p_query_hashtag}",
      "program": "let table x := \\(p_query_hashtag :Hashtag) -> @com.twitter.search_by_hashtag(query_hashtag=p_query_hashtag);"
    },
    {
      "utterance": "${count:const} recent tweets with hashtag $p_query_hashtag",
      "program": "let table x := \\(p_count :Number, p_query_hashtag :Hashtag) -> @com.twitter.search_by_hashtag(count=p_count, query_hashtag=p_query_hashtag);"
    },
    {
      "utterance": "tweets from ${p_from} with hashtag $p_query_hashtag",
      "program": "let table x := \\(p_from :Username, p_query_hashtag :Hashtag) -> @com.twitter.search_by_hashtag(query_hashtag=p_query_hashtag), from == p_from;"
    },
    {
      "utterance": "tweets with hashtag ${p_query_hashtag} in reply to ${p_in_reply_to}",
      "program": "let table x := \\(p_query_hashtag :Hashtag, p_in_reply_to :Username) -> @com.twitter.search_by_hashtag(query_hashtag=p_query_hashtag), in_reply_to == p_in_reply_to;"
    },
    {
      "utterance": "tweet ${p_status}",
      "program": "let action x := \\(p_status :String) -> @com.twitter.post(status=p_status);"
    },
    {
      "utterance": "post on twitter saying ${p_status}",
      "program": "let action x := \\(p_status :String) -> @com.twitter.post(status=p_status);"
    },
    {
      "utterance": "send a dm on twitter to ${p_to} saying ${p_message}",
      "program": "let action x := \\(p_to :Username, p_message :String) -> @com.twitter.send_direct_message(to=p_to, message=p_message);"
    },
    {
      "utterance": "send a direct message on twitter to ${p_to} saying ${p_message}",
      "program": "let action x := \\(p_to :Username, p_message :String) -> @com.twitter.send_direct_message(to=p_to, message=p_message);"
    },
    {
      "utterance": "dm ${p_to} on twitter saying ${p_message}",
      "program": "let action x := \\(p_to :Username, p_message :String) -> @com.twitter.send_direct_message(to=p_to, message=p_message);"
    },
    {
      "utterance": "tweet a picture with caption ${p_caption}",
      "program": "let action x := \\(p_caption :String) -> @com.twitter.post_picture(caption=p_caption);"
    },
    {
      "utterance": "post a picture on twitter saying ${p_caption}",
      "program": "let action x := \\(p_caption :String) -> @com.twitter.post_picture(caption=p_caption);"
    },
    {
      "utterance": "follow user ${p_user_name} on twitter",
      "program": "let action x := \\(p_user_name :Username) -> @com.twitter.follow(user_name=p_user_name);"
    },
    {
      "utterance": "unfollow user ${p_user_name} on twitter",
      "program": "let action x := \\(p_user_name :Username) -> @com.twitter.unfollow(user_name=p_user_name);"
    },
    {
      "utterance": "stop following ${p_user_name} on twitter",
      "program": "let action x := \\(p_user_name :Username) -> @com.twitter.unfollow(user_name=p_user_name);"
    },
    {
      "utterance": "tweets from anyone i follow",
      "program": "let table x := \\() -> @com.twitter.home_timeline();"
    },
    {
      "utterance": "tweets from anyone i follow that contain ${p_text}",
      "program": "let table x := \\(p_text : String) -> @com.twitter.home_timeline(), text =~ p_text;"
    },
    {
      "utterance": "my twitter replies to ${p_in_reply_to}",
      "program": "let table x := \\(p_in_reply_to :Username) -> @com.twitter.my_tweets(), in_reply_to == p_in_reply_to;"
    },
    {
      "utterance": "my tweets",
      "program": "let table x := \\() -> @com.twitter.my_tweets();"
    },
    {
      "utterance": "my twitter direct messages",
      "program": "let table x := \\() -> @com.twitter.direct_messages();"
    },
    {
      "utterance": "the direct messages i received on twitter",
      "program": "let table x := \\() -> @com.twitter.direct_messages();"
    },
    {
      "utterance": "tweets from anyone i follow in reply to ${p_in_reply_to}",
      "program": "let table x := \\(p_in_reply_to :Username) -> @com.twitter.home_timeline(), in_reply_to == p_in_reply_to;"
    },
    {
      "utterance": "my tweets with hashtag ${p_hashtag}",
      "program": "let table x := \\(p_hashtag :Hashtag) -> @com.twitter.my_tweets(), contains(hashtags, p_hashtag);"
    },
    {
      "utterance": "tweets from people i follow about ${p_hashtag:const}",
      "program": "let table x := \\(p_hashtag :Hashtag) -> @com.twitter.home_timeline(), contains(hashtags, p_hashtag);"
    },
    {
      "utterance": "tweets in my timeline",
      "program": "let table x := \\() -> @com.twitter.my_tweets();"
    },
    {
      "utterance": "retweet ${p_tweet_id}",
      "program": "let action x := \\(p_tweet_id : Entity(com.twitter:id)) -> @com.twitter.retweet(tweet_id=p_tweet_id);"
    },
    {
      "utterance": "automatically retweet anyone i follow",
      "program": "monitor @twitter.home_timeline() => @twitter.retweet(tweet_id=tweet_id);"
    },
    {
      "utterance": "automatically retweet anyone i follow that tweets about #almond",
      "program": "monitor @twitter.home_timeline(), contains(hashtags, \"almond\"^^tt:hashtags) => @twitter.retweet(tweet_id=tweet_id);"
    },
    {
      "utterance": "automatically retweet @realDonaldTrump",
      "program": "monitor @twitter.home_timeline(), from == \"realDonaldTrump\"^^tt:username => @twitter.retweet(tweet_id=tweet_id);"
    }
  ]
}
