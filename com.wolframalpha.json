{
    "module_type": "org.thingpedia.v2",
    "params": {},
    "category": "data",
    "subcategory": "service",
    "types": [],
    "child_types": [],
    "auth": {
        "type": "none"
    },
    "queries": {
        "plot": {
            "args": [
                {
                    "name": "query",
                    "type": "String",
                    "question": "What function?",
                    "is_input": true,
                    "required": true
                },
                {
                    "name": "picture_url",
                    "type": "Entity(tt:picture)",
                    "question": "",
                    "is_input": false,
                    "required": false
                }
            ],
            "doc": "fetch a plot of a function from WolframAlpha, with one or two variables",
            "confirmation": "get a plot of ${query} from wolframalpha",
            "confirmation_remote": "",
            "canonical": "get plot from wolframalpha",
            "formatted": [
                {
                    "type": "picture",
                    "url": "${picture_url}"
                }
            ],
            "poll_interval": -1,
            "is_list": false
        }
    },
    "actions": {},
    "examples": [
        {
            "utterance": "a plot of ${function} from wolfram alpha",
            "program": "let table plot := \\(function :String) -> @com.wolframalpha.plot(query=function);"
        },
        {
            "utterance": "a plot of ${function} from wolframalpha",
            "program": "let table plot := \\(function :String) -> @com.wolframalpha.plot(query=function);"
        },
        {
            "utterance": "a plot of ${function}",
            "program": "let table plot := \\(function :String) -> @com.wolframalpha.plot(query=function);"
        },
        {
            "utterance": "a graph of ${function} from wolframalpha",
            "program": "let table plot := \\(function :String) -> @com.wolframalpha.plot(query=function);"
        },
        {
            "utterance": "a graph of ${function} from wolframalpha",
            "program": "let table plot := \\(function :String) -> @com.wolframalpha.plot(query=function);"
        },
        {
            "utterance": ", plot the function ${function}",
            "program": "let table plot := \\(function :String) -> @com.wolframalpha.plot(query=function);"
        },
        {
            "utterance": ", plot ${function} on wolframalpha",
            "program": "let table plot := \\(function :String) -> @com.wolframalpha.plot(query=function);"
        },
        {
            "utterance": ", plot ${function} on wolfram alpha",
            "program": "let table plot := \\(function :String) -> @com.wolframalpha.plot(query=function);"
        }
    ]
}
