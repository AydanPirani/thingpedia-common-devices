{
    "module_type": "org.thingpedia.v2",
    "params": {},
    "category": "data",
    "subcategory": "media",
    "types": [],
    "child_types": [],
    "auth": {
        "type": "none"
    },
    "queries": {
        "apod": {
            "args": [
                {
                    "name": "title",
                    "type": "String",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "description",
                    "type": "String",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "picture_url",
                    "type": "Entity(tt:picture)",
                    "question": "",
                    "is_input": false,
                    "required": false
                }
            ],
            "doc": "Title, description, and image URL of NASA's Astronomy Picture of the Day (APOD)",
            "confirmation": "NASA's Astronomy Picture of the Day",
            "confirmation_remote": "",
            "canonical": "get astronomy picture of the day on nasa",
            "formatted": [
                {
                    "type": "text",
                    "text": "${title}"
                },
                {
                    "type": "text",
                    "text": "${description}"
                },
                {
                    "type": "picture",
                    "url": "${picture_url}"
                }
            ],
            "poll_interval": 86400000,
            "is_list": false
        },
        "rover": {
            "args": [
                {
                    "name": "date_taken",
                    "type": "Date",
                    "question": "From what Earth day do you want pictures?",
                    "is_input": true,
                    "required": false
                },
                {
                    "name": "count",
                    "type": "Number",
                    "question": "How many pictures do you want?",
                    "is_input": true,
                    "required": false
                },
                {
                    "name": "picture_url",
                    "type": "Entity(tt:picture)",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "camera_used",
                    "type": "Entity(gov.nasa:curiosity_rover_camera)",
                    "question": "",
                    "is_input": false,
                    "required": false
                }
            ],
            "doc": "photos from the Curiosity Rover on Mars",
            "confirmation": "Curiosity Rover photos from NASA",
            "confirmation_remote": "",
            "canonical": "get curiosity rover picture on nasa",
            "formatted": [
                {
                    "type": "picture",
                    "url": "${picture_url}"
                }
            ],
            "poll_interval": 86400000,
            "is_list": true
        },
        "asteroid": {
            "args": [
                {
                    "name": "asteroid_id",
                    "type": "Entity(gov.nasa:asteroid_id)",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "name",
                    "type": "String",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "estimated_diameter_min",
                    "type": "Measure(m)",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "estimated_diameter_max",
                    "type": "Measure(m)",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "is_dangerous",
                    "type": "Boolean",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "relative_velocity",
                    "type": "Measure(mps)",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "distance",
                    "type": "Measure(m)",
                    "question": "",
                    "is_input": false,
                    "required": false
                },
                {
                    "name": "orbiting_body",
                    "type": "String",
                    "question": "",
                    "is_input": false,
                    "required": false
                }
            ],
            "doc": "Daily-updated data on the closest asteroid to earth",
            "confirmation": "the asteroid passing close to Earth today",
            "confirmation_remote": "",
            "canonical": "close asteroid on nasa",
            "formatted": [
                {
                    "type": "code",
                    "code": "(function({is_dangerous,name}, hint, formatter) {\nif (is_dangerous)\nreturn `Dangerous object near Earth today: ${name}`;\nelse\nreturn `Nearest asteroid today: ${name}`;\n})"
                },
                {
                    "type": "text",
                    "text": "Diameter: between ${estimated_diameter_min:m} m and ${estimated_diameter_max:m} m"
                },
                {
                    "type": "text",
                    "text": "Relative velocity: ${relative_velocity:mps} m/s"
                },
                {
                    "type": "text",
                    "text": "Closest distance to Earth: ${distance:km} km"
                }
            ],
            "poll_interval": 86400000,
            "is_list": false
        }
    },
    "actions": {},
    "examples": [
        {
            "utterance": "when an asteroid passes close to earth",
            "program": "let stream x := monitor (@gov.nasa.asteroid());"
        },
        {
            "utterance": "today 's asteroid info",
            "program": "let table x := @gov.nasa.asteroid();"
        },
        {
            "utterance": "nasa 's astronomy picture of the day",
            "program": "let table x := @gov.nasa.apod();"
        },
        {
            "utterance": "nasa 's apod",
            "program": "let table x := @gov.nasa.apod();"
        },
        {
            "utterance": "a nasa picture",
            "program": "let table x := @gov.nasa.apod();"
        },
        {
            "utterance": "a picture from curiosity rover",
            "program": "let table x := @gov.nasa.rover();"
        },
        {
            "utterance": "curiosity rover",
            "program": "let table x := @gov.nasa.rover();"
        },
        {
            "utterance": "${p_count:const} pictures from curiosity rover",
            "program": "let table x := \\(p_count :Number) -> @gov.nasa.rover(count=p_count);"
        },
        {
            "utterance": "a picture from curiosity rover taken on $p_date_taken",
            "program": "let table x := \\(p_date_taken :Date) -> @gov.nasa.rover(date_taken=p_date_taken);"
        },
        {
            "utterance": "when a dangerous asteroid is close to earth",
            "program": "let stream x := monitor ((@gov.nasa.asteroid()), is_dangerous == true);"
        },
        {
            "utterance": "when an asteroid is closer to earth than ${p_distance}",
            "program": "let stream x := \\(p_distance :Measure(m)) -> monitor ((@gov.nasa.asteroid()), distance <= p_distance);"
        },
        {
            "utterance": "when a close asteroid is faster than ${p_relative_velocity}",
            "program": "let stream x := \\(p_relative_velocity :Measure(mps)) -> monitor ((@gov.nasa.asteroid()), relative_velocity >= p_relative_velocity);"
        }
    ]
}
