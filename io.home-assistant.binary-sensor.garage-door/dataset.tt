dataset @io.home-assistant.binary-sensor.garage-door language "en" {

  program := now => @io.home-assistant.binary-sensor.garage-door.state() => notify
  #_[utterances=["what is the state of my garage-door sensor?",
                "what is my garage-door sensor showing?",
                "what does my garage-door sensor say?",
                "is my garage-door sensor open?",
                "check if my garage-door sensor is open",
                "is my garage-door sensor closed?",
                "check if my garage-door sensor is closed",
                "check if my garage-door sensor is open or closed"]];

  query := @io.home-assistant.binary-sensor.garage-door.state()
  #_[utterances=["the state of my garage-door sensor",
                "if my garage-door sensor is open or closed",
                "whether my garage-door sensor is open or closed"]];

  stream := monitor @io.home-assistant.binary-sensor.garage-door.state()
  #_[utterances=[["when the state of my garage-door sensor changes",
                 "when my garage-door sensor changes state",
                 "when my garage-door sensor changes"]];

  stream (p_state : Enum(open, closed)) := edge( @io.home-assistant.binary-sensor.garage-door.state()) on (state == p_state)
  #_[utterances=["when my garage-door sensor becomes ${p_state}",
                "when my garage-door sensor is ${p_state}",
                "when my garage-door sensor turns ${p_state}",
                "when my garage-door sensor changes to ${p_state}",
                "if my garage-door sensor becomes ${p_state}",
                "if my garage-door sensor is ${p_state}",
                "if my garage-door sensor turns ${p_state}",
                "if my garage-door sensor changes to ${p_state}"]];

  stream := edge( @io.home-assistant.binary-sensor.garage-door.state()) on (state == enum(open))
  #_[utterances=["when my garage-door sensor becomes open",
                "when my garage-door sensor turns open",
                "when my garage-door sensor changes to open",
                "if my garage-door sensor becomes open",
                "if my garage-door sensor turns open",
                "if my garage-door sensor changes to open",
                "when my garage-door sensor becomes not closed",
                "when my garage-door sensor turns not closed",
                "when my garage-door sensor changes to not closed",
                "if my garage-door sensor becomes not closed",
                "if my garage-door sensor turns not closed",
                "if my garage-door sensor changes to not closed"]];

  stream := edge( @io.home-assistant.binary-sensor.garage-door.state()) on (state == enum(closed))
  #_[utterances=["when my garage-door sensor becomes closed",
                "when my garage-door sensor turns closed",
                "when my garage-door sensor changes to closed",
                "if my garage-door sensor becomes closed",
                "if my garage-door sensor turns closed",
                "if my garage-door sensor changes to closed",
                "when my garage-door sensor becomes not open",
                "when my garage-door sensor turns not open",
                "when my garage-door sensor changes to not open",
                "if my garage-door sensor becomes not open",
                "if my garage-door sensor turns not open",
                "if my garage-door sensor changes to not open"]];

  program (p_name : String) := now => @io.home-assistant.binary-sensor.garage-door(name=p_name).state() => notify
  #_[utterances=["what is the state of my ${p_name} garage-door sensor?",
                "what is my ${p_name} garage-door sensor showing?",
                "what does my ${p_name} garage-door sensor say?",
                "is my ${p_name} garage-door sensor open?",
                "check if my ${p_name} garage-door sensor is open",
                "is my ${p_name} garage-door sensor closed?",
                "check if my ${p_name} garage-door sensor is closed",
                "check if my ${p_name} garage-door sensor is open or closed"]];

  query (p_name : String) := @io.home-assistant.binary-sensor.garage-door(name=p_name).state()
  #_[utterances=["the state of my ${p_name} garage-door sensor",
                "if my ${p_name} garage-door sensor is open or closed",
                "whether my ${p_name} garage-door sensor is open or closed"]];

  stream (p_name : String) := monitor @io.home-assistant.binary-sensor.garage-door(name=p_name).state()
  #_[utterances=[["when the state of my ${p_name} garage-door sensor changes",
                 "when my ${p_name} garage-door sensor changes state",
                 "when my ${p_name} garage-door sensor changes"]];

  stream (p_name : String, p_state : Enum(open, closed)) := edge( @io.home-assistant.binary-sensor.garage-door(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} garage-door sensor becomes ${p_state}",
                "when my ${p_name} garage-door sensor is ${p_state}",
                "when my ${p_name} garage-door sensor turns ${p_state}",
                "when my ${p_name} garage-door sensor changes to ${p_state}",
                "if my ${p_name} garage-door sensor becomes ${p_state}",
                "if my ${p_name} garage-door sensor is ${p_state}",
                "if my ${p_name} garage-door sensor turns ${p_state}",
                "if my ${p_name} garage-door sensor changes to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.binary-sensor.garage-door(name=p_name).state()) on (state == enum(open))
  #_[utterances=["when my ${p_name} garage-door sensor becomes open",
                "when my ${p_name} garage-door sensor turns open",
                "when my ${p_name} garage-door sensor changes to open",
                "if my ${p_name} garage-door sensor becomes open",
                "if my ${p_name} garage-door sensor turns open",
                "if my ${p_name} garage-door sensor changes to open",
                "when my ${p_name} garage-door sensor becomes not closed",
                "when my ${p_name} garage-door sensor turns not closed",
                "when my ${p_name} garage-door sensor changes to not closed",
                "if my ${p_name} garage-door sensor becomes not closed",
                "if my ${p_name} garage-door sensor turns not closed",
                "if my ${p_name} garage-door sensor changes to not closed"]];

  stream (p_name : String) := edge( @io.home-assistant.binary-sensor.garage-door(name=p_name).state()) on (state == enum(closed))
  #_[utterances=["when my ${p_name} garage-door sensor becomes closed",
                "when my ${p_name} garage-door sensor turns closed",
                "when my ${p_name} garage-door sensor changes to closed",
                "if my ${p_name} garage-door sensor becomes closed",
                "if my ${p_name} garage-door sensor turns closed",
                "if my ${p_name} garage-door sensor changes to closed",
                "when my ${p_name} garage-door sensor becomes not open",
                "when my ${p_name} garage-door sensor turns not open",
                "when my ${p_name} garage-door sensor changes to not open",
                "if my ${p_name} garage-door sensor becomes not open",
                "if my ${p_name} garage-door sensor turns not open",
                "if my ${p_name} garage-door sensor changes to not open"]];
}