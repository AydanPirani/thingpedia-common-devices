dataset @io.home-assistant.binary-sensor.power language "en" {

  program := now => @io.home-assistant.binary-sensor.power.state() => notify
  #_[utterances=["what is the state of my power sensor?",
                "what is my power sensor showing?",
                "what does my power sensor say?",
                "is my power sensor detecting power?",
                "check if my power sensor is detecting power",
                "is my power sensor detecting any power?",
                "check if my power sensor is detecting any power",
                "is my power sensor not detecting power?",
                "check if my power sensor is not detecting power",
                "check if my power sensor is detecting power or not detecting power",
                "check if my power sensor is detecting any power or not detecting power"]];

  query := @io.home-assistant.binary-sensor.power.state()
  #_[utterances=["the state of my power sensor",
                "if my power sensor is detecting power or not detecting power",
                "whether my power sensor is detecting power or not detecting power",
                "if my power sensor is detecting any power or not detecting power",
                "whether my power sensor is detecting any power or not detecting power"]];

  stream := monitor @io.home-assistant.binary-sensor.power.state()
  #_[utterances=[["when the state of my power sensor changes",
                 "when my power sensor changes state",
                 "when my power sensor changes"]];

  stream (p_state : Enum(detecting_power, not_detecting_power)) := edge( @io.home-assistant.binary-sensor.power.state()) on (state == p_state)
  #_[utterances=["when my power sensor becomes ${p_state}",
                "when my power sensor is ${p_state}",
                "when my power sensor turns ${p_state}",
                "when my power sensor changes to ${p_state}",
                "if my power sensor becomes ${p_state}",
                "if my power sensor is ${p_state}",
                "if my power sensor turns ${p_state}",
                "if my power sensor changes to ${p_state}"]];

  stream := edge( @io.home-assistant.binary-sensor.power.state()) on (state == enum(detecting_power))
  #_[utterances=["when my power sensor becomes detecting power",
                "when my power sensor turns detecting power",
                "when my power sensor changes to detecting power",
                "if my power sensor becomes detecting power",
                "if my power sensor turns detecting power",
                "if my power sensor changes to detecting power",
                "when my power sensor becomes detecting any power",
                "when my power sensor turns detecting any power",
                "when my power sensor changes to detecting any power",
                "if my power sensor becomes detecting any power",
                "if my power sensor turns detecting any power",
                "if my power sensor changes to detecting any power"]];

  stream := edge( @io.home-assistant.binary-sensor.power.state()) on (state == enum(not_detecting_power))
  #_[utterances=["when my power sensor becomes not detecting power",
                "when my power sensor turns not detecting power",
                "when my power sensor changes to not detecting power",
                "if my power sensor becomes not detecting power",
                "if my power sensor turns not detecting power",
                "if my power sensor changes to not detecting power",
                "when my power sensor becomes not detecting any power",
                "when my power sensor turns not detecting any power",
                "when my power sensor changes to not detecting any power",
                "if my power sensor becomes not detecting any power",
                "if my power sensor turns not detecting any power",
                "if my power sensor changes to not detecting any power"]];

  program (p_name : String) := now => @io.home-assistant.binary-sensor.power(name=p_name).state() => notify
  #_[utterances=["what is the state of my ${p_name} power sensor?",
                "what is my ${p_name} power sensor showing?",
                "what does my ${p_name} power sensor say?",
                "is my ${p_name} power sensor detecting power?",
                "check if my ${p_name} power sensor is detecting power",
                "is my ${p_name} power sensor detecting any power?",
                "check if my ${p_name} power sensor is detecting any power",
                "is my ${p_name} power sensor not detecting power?",
                "check if my ${p_name} power sensor is not detecting power",
                "check if my ${p_name} power sensor is detecting power or not detecting power",
                "check if my ${p_name} power sensor is detecting any power or not detecting power"]];

  query (p_name : String) := @io.home-assistant.binary-sensor.power(name=p_name).state()
  #_[utterances=["the state of my ${p_name} power sensor",
                "if my ${p_name} power sensor is detecting power or not detecting power",
                "whether my ${p_name} power sensor is detecting power or not detecting power",
                "if my ${p_name} power sensor is detecting any power or not detecting power",
                "whether my ${p_name} power sensor is detecting any power or not detecting power"]];

  stream (p_name : String) := monitor @io.home-assistant.binary-sensor.power(name=p_name).state()
  #_[utterances=[["when the state of my ${p_name} power sensor changes",
                 "when my ${p_name} power sensor changes state",
                 "when my ${p_name} power sensor changes"]];

  stream (p_name : String, p_state : Enum(detecting_power, not_detecting_power)) := edge( @io.home-assistant.binary-sensor.power(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} power sensor becomes ${p_state}",
                "when my ${p_name} power sensor is ${p_state}",
                "when my ${p_name} power sensor turns ${p_state}",
                "when my ${p_name} power sensor changes to ${p_state}",
                "if my ${p_name} power sensor becomes ${p_state}",
                "if my ${p_name} power sensor is ${p_state}",
                "if my ${p_name} power sensor turns ${p_state}",
                "if my ${p_name} power sensor changes to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.binary-sensor.power(name=p_name).state()) on (state == enum(detecting_power))
  #_[utterances=["when my ${p_name} power sensor becomes detecting power",
                "when my ${p_name} power sensor turns detecting power",
                "when my ${p_name} power sensor changes to detecting power",
                "if my ${p_name} power sensor becomes detecting power",
                "if my ${p_name} power sensor turns detecting power",
                "if my ${p_name} power sensor changes to detecting power",
                "when my ${p_name} power sensor becomes detecting any power",
                "when my ${p_name} power sensor turns detecting any power",
                "when my ${p_name} power sensor changes to detecting any power",
                "if my ${p_name} power sensor becomes detecting any power",
                "if my ${p_name} power sensor turns detecting any power",
                "if my ${p_name} power sensor changes to detecting any power"]];

  stream (p_name : String) := edge( @io.home-assistant.binary-sensor.power(name=p_name).state()) on (state == enum(not_detecting_power))
  #_[utterances=["when my ${p_name} power sensor becomes not detecting power",
                "when my ${p_name} power sensor turns not detecting power",
                "when my ${p_name} power sensor changes to not detecting power",
                "if my ${p_name} power sensor becomes not detecting power",
                "if my ${p_name} power sensor turns not detecting power",
                "if my ${p_name} power sensor changes to not detecting power",
                "when my ${p_name} power sensor becomes not detecting any power",
                "when my ${p_name} power sensor turns not detecting any power",
                "when my ${p_name} power sensor changes to not detecting any power",
                "if my ${p_name} power sensor becomes not detecting any power",
                "if my ${p_name} power sensor turns not detecting any power",
                "if my ${p_name} power sensor changes to not detecting any power"]];
}