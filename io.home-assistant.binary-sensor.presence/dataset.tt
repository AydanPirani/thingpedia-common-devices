dataset @io.home-assistant.binary-sensor.presence {
  program := now => @io.home-assistant.binary-sensor.presence.state() => notify
  #_[utterances="what is the state of my presence sensor?",
                "what is my presence sensor showing?",
                "what does my presence sensor say?",
                "is my presence sensor home?",
                "check if my presence sensor is home",
                "is my presence sensor away?",
                "check if my presence sensor is away",
                "check if my presence sensor is home or away"]];

  program (p_name : String) := now => @io.home-assistant.binary-sensor.presence(name=p_name).state() => notify
  #_[utterances="what is the state of my ${p_name} presence sensor?",
                "what is my ${p_name} presence sensor showing?",
                "what does my ${p_name} presence sensor say?",
                "is my ${p_name} presence sensor home?",
                "check if my ${p_name} presence sensor is home",
                "is my ${p_name} presence sensor away?",
                "check if my ${p_name} presence sensor is away",
                "check if my ${p_name} presence sensor is home or away"]];

  query := @io.home-assistant.binary-sensor.presence.state()
  #_[utterances="the state of my presence sensor",
                "if my presence sensor is home or away",
                "whether my presence sensor is home or away"]];

  query (p_name : String) := @io.home-assistant.binary-sensor.presence(name=p_name).state()
  #_[utterances="the state of my ${p_name} presence sensor",
                "if my ${p_name} presence sensor is home or away",
                "whether my ${p_name} presence sensor is home or away"]];

  stream := monitor @io.home-assistant.binary-sensor.presence.state()
  #_[utterances=["when the state of my presence sensor changes",
                 "when my presence sensor changes state",
                 "when my presence sensor changes"]];

  stream (p_name : String) := monitor @io.home-assistant.binary-sensor.presence(name=p_name).state()
  #_[utterances=["when the state of my ${p_name} presence sensor changes",
                 "when my ${p_name} presence sensor changes state",
                 "when my ${p_name} presence sensor changes"]];

  stream (p_state : Enum(home, away)) := edge( @io.home-assistant.binary-sensor.presence.state()) on (state == p_state)
  #_[utterances="when my presence sensor becomes ${p_state}",
                "when my presence sensor is ${p_state}",
                "when my presence sensor turns ${p_state}",
                "when my presence sensor changes to ${p_state}",
                "if my presence sensor becomes ${p_state}",
                "if my presence sensor is ${p_state}",
                "if my presence sensor turns ${p_state}",
                "if my presence sensor changes to ${p_state}"]];

  stream (p_name : String, p_state : Enum(home, away)) := edge( @io.home-assistant.binary-sensor.presence(name=p_name).state()) on (state == p_state)
  #_[utterances="when my ${p_name} presence sensor becomes ${p_state}",
                "when my ${p_name} presence sensor is ${p_state}",
                "when my ${p_name} presence sensor turns ${p_state}",
                "when my ${p_name} presence sensor changes to ${p_state}",
                "if my ${p_name} presence sensor becomes ${p_state}",
                "if my ${p_name} presence sensor is ${p_state}",
                "if my ${p_name} presence sensor turns ${p_state}",
                "if my ${p_name} presence sensor changes to ${p_state}"]];

  stream :=  edge( @io.home-assistant.binary-sensor.presence.state()) on (state == enum(home))
  #_[utterances="when my presence sensor becomes home",
                "when my presence sensor turns home",
                "when my presence sensor changes to home",
                "if my presence sensor becomes home",
                "if my presence sensor turns home",
                "if my presence sensor changes to home",
                "when my presence sensor becomes not away",
                "when my presence sensor turns not away",
                "when my presence sensor changes to not away",
                "if my presence sensor becomes not away",
                "if my presence sensor turns not away",
                "if my presence sensor changes to not away"]];

  stream (p_name : String) :=  edge( @io.home-assistant.binary-sensor.presence(name=p_name).state()) on (state == enum(home))
  #_[utterances="when my ${p_name} presence sensor becomes home",
                "when my ${p_name} presence sensor turns home",
                "when my ${p_name} presence sensor changes to home",
                "if my ${p_name} presence sensor becomes home",
                "if my ${p_name} presence sensor turns home",
                "if my ${p_name} presence sensor changes to home",
                "when my ${p_name} presence sensor becomes not away",
                "when my ${p_name} presence sensor turns not away",
                "when my ${p_name} presence sensor changes to not away",
                "if my ${p_name} presence sensor becomes not away",
                "if my ${p_name} presence sensor turns not away",
                "if my ${p_name} presence sensor changes to not away"]];

  stream :=  edge( @io.home-assistant.binary-sensor.presence.state()) on (state == enum(away))
  #_[utterances="when my presence sensor becomes away",
                "when my presence sensor turns away",
                "when my presence sensor changes to away",
                "if my presence sensor becomes away",
                "if my presence sensor turns away",
                "if my presence sensor changes to away",
                "when my presence sensor becomes not home",
                "when my presence sensor turns not home",
                "when my presence sensor changes to not home",
                "if my presence sensor becomes not home",
                "if my presence sensor turns not home",
                "if my presence sensor changes to not home"]];

  stream (p_name : String) :=  edge( @io.home-assistant.binary-sensor.presence(name=p_name).state()) on (state == enum(away))
  #_[utterances="when my ${p_name} presence sensor becomes away",
                "when my ${p_name} presence sensor turns away",
                "when my ${p_name} presence sensor changes to away",
                "if my ${p_name} presence sensor becomes away",
                "if my ${p_name} presence sensor turns away",
                "if my ${p_name} presence sensor changes to away",
                "when my ${p_name} presence sensor becomes not home",
                "when my ${p_name} presence sensor turns not home",
                "when my ${p_name} presence sensor changes to not home",
                "if my ${p_name} presence sensor becomes not home",
                "if my ${p_name} presence sensor turns not home",
                "if my ${p_name} presence sensor changes to not home"]];
}