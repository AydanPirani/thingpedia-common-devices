dataset @io.home-assistant.cover-read-only.door language "en" {

  program := now => @io.home-assistant.cover-read-only.door.state() => notify
  #_[utterances=["what is the state of my door?",
                "is my door open?",
                "check if my door is open",
                "is my door opened?",
                "check if my door is opened",
                "is my door close?",
                "check if my door is close",
                "is my door closed?",
                "check if my door is closed",
                "check if my door is open or close",
                "check if my door is open or closed",
                "check if my door is opened or close",
                "check if my door is opened or closed"]];

  query := @io.home-assistant.cover-read-only.door.state()
  #_[utterances=["the state of my door",
                "if my door is open or close",
                "whether my door is open or close",
                "if my door is open or closed",
                "whether my door is open or closed",
                "if my door is opened or close",
                "whether my door is opened or close",
                "if my door is opened or closed",
                "whether my door is opened or closed"]];

  stream := monitor @io.home-assistant.cover-read-only.door.state()
  #_[utterances=["when the state of my door changes",
                 "when my door changes state",
                 "when my door changes"]];

  stream (p_state : Enum(open, closed)) := edge( @io.home-assistant.cover-read-only.door.state()) on (state == p_state)
  #_[utterances=["when my door becomes ${p_state}",
                "when my door is ${p_state}",
                "when my door changes to ${p_state}",
                "if my door becomes ${p_state}",
                "if my door is ${p_state}",
                "if my door changes to ${p_state}"]];

  stream := edge( @io.home-assistant.cover-read-only.door.state()) on (state == enum(open))
  #_[utterances=["when my door becomes open",
                "when my door changes to open",
                "when my door is open",
                "if my door becomes open",
                "if my door changes to open",
                "if my door is open",
                "when my door becomes opened",
                "when my door changes to opened",
                "when my door is opened",
                "if my door becomes opened",
                "if my door changes to opened",
                "if my door is opened",
                "when my door opens",
                "if my door opens",
                "when my door becomes not close",
                "when my door changes to not close",
                "if my door becomes not close",
                "if my door changes to not close",
                "when my door becomes not closed",
                "when my door changes to not closed",
                "if my door becomes not closed",
                "if my door changes to not closed"]];

  stream := edge( @io.home-assistant.cover-read-only.door.state()) on (state == enum(closed))
  #_[utterances=["when my door becomes close",
                "when my door changes to close",
                "when my door is close",
                "if my door becomes close",
                "if my door changes to close",
                "if my door is close",
                "when my door becomes closed",
                "when my door changes to closed",
                "when my door is closed",
                "if my door becomes closed",
                "if my door changes to closed",
                "if my door is closed",
                "when my door closes",
                "if my door closes",
                "when my door becomes not open",
                "when my door changes to not open",
                "if my door becomes not open",
                "if my door changes to not open",
                "when my door becomes not opened",
                "when my door changes to not opened",
                "if my door becomes not opened",
                "if my door changes to not opened"]];

  program (p_name : String) := now => @io.home-assistant.cover-read-only.door(name=p_name).state() => notify
  #_[utterances=["what is the state of my ${p_name} door?",
                "is my ${p_name} door open?",
                "check if my ${p_name} door is open",
                "is my ${p_name} door opened?",
                "check if my ${p_name} door is opened",
                "is my ${p_name} door close?",
                "check if my ${p_name} door is close",
                "is my ${p_name} door closed?",
                "check if my ${p_name} door is closed",
                "check if my ${p_name} door is open or close",
                "check if my ${p_name} door is open or closed",
                "check if my ${p_name} door is opened or close",
                "check if my ${p_name} door is opened or closed"]];

  query (p_name : String) := @io.home-assistant.cover-read-only.door(name=p_name).state()
  #_[utterances=["the state of my ${p_name} door",
                "if my ${p_name} door is open or close",
                "whether my ${p_name} door is open or close",
                "if my ${p_name} door is open or closed",
                "whether my ${p_name} door is open or closed",
                "if my ${p_name} door is opened or close",
                "whether my ${p_name} door is opened or close",
                "if my ${p_name} door is opened or closed",
                "whether my ${p_name} door is opened or closed"]];

  stream (p_name : String) := monitor @io.home-assistant.cover-read-only.door(name=p_name).state()
  #_[utterances=["when the state of my ${p_name} door changes",
                 "when my ${p_name} door changes state",
                 "when my ${p_name} door changes"]];

  stream (p_name : String, p_state : Enum(open, closed)) := edge( @io.home-assistant.cover-read-only.door(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} door becomes ${p_state}",
                "when my ${p_name} door is ${p_state}",
                "when my ${p_name} door changes to ${p_state}",
                "if my ${p_name} door becomes ${p_state}",
                "if my ${p_name} door is ${p_state}",
                "if my ${p_name} door changes to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.cover-read-only.door(name=p_name).state()) on (state == enum(open))
  #_[utterances=["when my ${p_name} door becomes open",
                "when my ${p_name} door changes to open",
                "when my ${p_name} door is open",
                "if my ${p_name} door becomes open",
                "if my ${p_name} door changes to open",
                "if my ${p_name} door is open",
                "when my ${p_name} door becomes opened",
                "when my ${p_name} door changes to opened",
                "when my ${p_name} door is opened",
                "if my ${p_name} door becomes opened",
                "if my ${p_name} door changes to opened",
                "if my ${p_name} door is opened",
                "when my ${p_name} door opens",
                "if my ${p_name} door opens",
                "when my ${p_name} door becomes not close",
                "when my ${p_name} door changes to not close",
                "if my ${p_name} door becomes not close",
                "if my ${p_name} door changes to not close",
                "when my ${p_name} door becomes not closed",
                "when my ${p_name} door changes to not closed",
                "if my ${p_name} door becomes not closed",
                "if my ${p_name} door changes to not closed"]];

  stream (p_name : String) := edge( @io.home-assistant.cover-read-only.door(name=p_name).state()) on (state == enum(closed))
  #_[utterances=["when my ${p_name} door becomes close",
                "when my ${p_name} door changes to close",
                "when my ${p_name} door is close",
                "if my ${p_name} door becomes close",
                "if my ${p_name} door changes to close",
                "if my ${p_name} door is close",
                "when my ${p_name} door becomes closed",
                "when my ${p_name} door changes to closed",
                "when my ${p_name} door is closed",
                "if my ${p_name} door becomes closed",
                "if my ${p_name} door changes to closed",
                "if my ${p_name} door is closed",
                "when my ${p_name} door closes",
                "if my ${p_name} door closes",
                "when my ${p_name} door becomes not open",
                "when my ${p_name} door changes to not open",
                "if my ${p_name} door becomes not open",
                "if my ${p_name} door changes to not open",
                "when my ${p_name} door becomes not opened",
                "when my ${p_name} door changes to not opened",
                "if my ${p_name} door becomes not opened",
                "if my ${p_name} door changes to not opened"]];
}