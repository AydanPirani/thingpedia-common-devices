dataset @io.home-assistant.cover.blind language "en" {

  program := now => @io.home-assistant.cover.blind.state() => notify
  #_[utterances=["what is the state of my blind?",
                "is my blind open?",
                "are my blinds open?",
                "check if my blind is open",
                "check if my blinds are open",
                "is my blind opened?",
                "are my blinds opened?",
                "check if my blind is opened",
                "check if my blinds are opened",
                "is my blind close?",
                "are my blinds close?",
                "check if my blind is close",
                "check if my blinds are close",
                "is my blind closed?",
                "are my blinds closed?",
                "check if my blind is closed",
                "check if my blinds are closed",
                "check if my blind is open or close",
                "check if my blinds are open or close",
                "check if my blind is open or closed",
                "check if my blinds are open or closed",
                "check if my blind is opened or close",
                "check if my blinds are opened or close",
                "check if my blind is opened or closed",
                "check if my blinds are opened or closed"]];

  query := @io.home-assistant.cover.blind.state()
  #_[utterances=["the state of my blind",
                "if my blind is open or close",
                "if my blinds are open or close",
                "whether my blind is open or close",
                "whether my blinds are open or close",
                "if my blind is open or closed",
                "if my blinds are open or closed",
                "whether my blind is open or closed",
                "whether my blinds are open or closed",
                "if my blind is opened or close",
                "if my blinds are opened or close",
                "whether my blind is opened or close",
                "whether my blinds are opened or close",
                "if my blind is opened or closed",
                "if my blinds are opened or closed",
                "whether my blind is opened or closed",
                "whether my blinds are opened or closed"]];

  stream := monitor @io.home-assistant.cover.blind.state()
  #_[utterances=["when the state of my blind changes",
                 "when the state of my blinds change",
                 "when my blind changes state",
                 "when my blinds change state",
                 "when my blind changes",
                 "when my blinds change"]];

  stream (p_state : Enum(open, closed)) := edge( @io.home-assistant.cover.blind.state()) on (state == p_state)
  #_[utterances=["when my blind becomes ${p_state}",
                "when my blinds become ${p_state}",
                "when my blind is ${p_state}",
                "when my blinds are ${p_state}",
                "when my blind changes to ${p_state}",
                "when my blinds change to ${p_state}",
                "if my blind becomes ${p_state}",
                "if my blinds become ${p_state}",
                "if my blind is ${p_state}",
                "if my blinds are ${p_state}",
                "if my blind changes to ${p_state}",
                "if my blinds change to ${p_state}"]];

  stream := edge( @io.home-assistant.cover.blind.state()) on (state == enum(open))
  #_[utterances=["when my blind becomes open",
                "when my blinds become open",
                "when my blind changes to open",
                "when my blinds change to open",
                "when my blind is open",
                "when my blinds are open",
                "if my blind becomes open",
                "if my blinds become open",
                "if my blind changes to open",
                "if my blinds change to open",
                "if my blind is open",
                "if my blinds are open",
                "when my blind becomes opened",
                "when my blinds become opened",
                "when my blind changes to opened",
                "when my blinds change to opened",
                "when my blind is opened",
                "when my blinds are opened",
                "if my blind becomes opened",
                "if my blinds become opened",
                "if my blind changes to opened",
                "if my blinds change to opened",
                "if my blind is opened",
                "if my blinds are opened",
                "when my blind opens",
                "if my blind opens",
                "when my blinds open",
                "if my blinds open",
                "when my blind becomes not close",
                "when my blinds become not close",
                "when my blind changes to not close",
                "when my blinds change to not close",
                "if my blind becomes not close",
                "if my blinds become not close",
                "if my blind changes to not close",
                "if my blinds change to not close",
                "when my blind becomes not closed",
                "when my blinds become not closed",
                "when my blind changes to not closed",
                "when my blinds change to not closed",
                "if my blind becomes not closed",
                "if my blinds become not closed",
                "if my blind changes to not closed",
                "if my blinds change to not closed"]];

  stream := edge( @io.home-assistant.cover.blind.state()) on (state == enum(closed))
  #_[utterances=["when my blind becomes close",
                "when my blinds become close",
                "when my blind changes to close",
                "when my blinds change to close",
                "when my blind is close",
                "when my blinds are close",
                "if my blind becomes close",
                "if my blinds become close",
                "if my blind changes to close",
                "if my blinds change to close",
                "if my blind is close",
                "if my blinds are close",
                "when my blind becomes closed",
                "when my blinds become closed",
                "when my blind changes to closed",
                "when my blinds change to closed",
                "when my blind is closed",
                "when my blinds are closed",
                "if my blind becomes closed",
                "if my blinds become closed",
                "if my blind changes to closed",
                "if my blinds change to closed",
                "if my blind is closed",
                "if my blinds are closed",
                "when my blind closes",
                "if my blind closes",
                "when my blinds close",
                "if my blinds close",
                "when my blind becomes not open",
                "when my blinds become not open",
                "when my blind changes to not open",
                "when my blinds change to not open",
                "if my blind becomes not open",
                "if my blinds become not open",
                "if my blind changes to not open",
                "if my blinds change to not open",
                "when my blind becomes not opened",
                "when my blinds become not opened",
                "when my blind changes to not opened",
                "when my blinds change to not opened",
                "if my blind becomes not opened",
                "if my blinds become not opened",
                "if my blind changes to not opened",
                "if my blinds change to not opened"]];

  action := @io.home-assistant.cover.blind.open_cover()
  #_[utterances=["open my blind",
                "open my blinds",
                "open the blind",
                "open the blinds",
                "open blind",
                "open blinds"]];

  action := @io.home-assistant.cover.blind.close_cover()
  #_[utterances=["close my blind",
                "close my blinds",
                "close the blind",
                "close the blinds",
                "close blind",
                "close blinds"]];

  program (p_name : String) := now => @io.home-assistant.cover.blind(name=p_name).state() => notify
  #_[utterances=["what is the state of my ${p_name} blind?",
                "is my ${p_name} blind open?",
                "are my ${p_name} blinds open?",
                "check if my ${p_name} blind is open",
                "check if my ${p_name} blinds are open",
                "is my ${p_name} blind opened?",
                "are my ${p_name} blinds opened?",
                "check if my ${p_name} blind is opened",
                "check if my ${p_name} blinds are opened",
                "is my ${p_name} blind close?",
                "are my ${p_name} blinds close?",
                "check if my ${p_name} blind is close",
                "check if my ${p_name} blinds are close",
                "is my ${p_name} blind closed?",
                "are my ${p_name} blinds closed?",
                "check if my ${p_name} blind is closed",
                "check if my ${p_name} blinds are closed",
                "check if my ${p_name} blind is open or close",
                "check if my ${p_name} blinds are open or close",
                "check if my ${p_name} blind is open or closed",
                "check if my ${p_name} blinds are open or closed",
                "check if my ${p_name} blind is opened or close",
                "check if my ${p_name} blinds are opened or close",
                "check if my ${p_name} blind is opened or closed",
                "check if my ${p_name} blinds are opened or closed"]];

  query (p_name : String) := @io.home-assistant.cover.blind(name=p_name).state()
  #_[utterances=["the state of my ${p_name} blind",
                "if my ${p_name} blind is open or close",
                "if my ${p_name} blinds are open or close",
                "whether my ${p_name} blind is open or close",
                "whether my ${p_name} blinds are open or close",
                "if my ${p_name} blind is open or closed",
                "if my ${p_name} blinds are open or closed",
                "whether my ${p_name} blind is open or closed",
                "whether my ${p_name} blinds are open or closed",
                "if my ${p_name} blind is opened or close",
                "if my ${p_name} blinds are opened or close",
                "whether my ${p_name} blind is opened or close",
                "whether my ${p_name} blinds are opened or close",
                "if my ${p_name} blind is opened or closed",
                "if my ${p_name} blinds are opened or closed",
                "whether my ${p_name} blind is opened or closed",
                "whether my ${p_name} blinds are opened or closed"]];

  stream (p_name : String) := monitor @io.home-assistant.cover.blind(name=p_name).state()
  #_[utterances=["when the state of my ${p_name} blind changes",
                 "when the state of my ${p_name} blinds change",
                 "when my ${p_name} blind changes state",
                 "when my ${p_name} blinds change state",
                 "when my ${p_name} blind changes",
                 "when my ${p_name} blinds change"]];

  stream (p_name : String, p_state : Enum(open, closed)) := edge( @io.home-assistant.cover.blind(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} blind becomes ${p_state}",
                "when my ${p_name} blinds become ${p_state}",
                "when my ${p_name} blind is ${p_state}",
                "when my ${p_name} blinds are ${p_state}",
                "when my ${p_name} blind changes to ${p_state}",
                "when my ${p_name} blinds change to ${p_state}",
                "if my ${p_name} blind becomes ${p_state}",
                "if my ${p_name} blinds become ${p_state}",
                "if my ${p_name} blind is ${p_state}",
                "if my ${p_name} blinds are ${p_state}",
                "if my ${p_name} blind changes to ${p_state}",
                "if my ${p_name} blinds change to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.cover.blind(name=p_name).state()) on (state == enum(open))
  #_[utterances=["when my ${p_name} blind becomes open",
                "when my ${p_name} blinds become open",
                "when my ${p_name} blind changes to open",
                "when my ${p_name} blinds change to open",
                "when my ${p_name} blind is open",
                "when my ${p_name} blinds are open",
                "if my ${p_name} blind becomes open",
                "if my ${p_name} blinds become open",
                "if my ${p_name} blind changes to open",
                "if my ${p_name} blinds change to open",
                "if my ${p_name} blind is open",
                "if my ${p_name} blinds are open",
                "when my ${p_name} blind becomes opened",
                "when my ${p_name} blinds become opened",
                "when my ${p_name} blind changes to opened",
                "when my ${p_name} blinds change to opened",
                "when my ${p_name} blind is opened",
                "when my ${p_name} blinds are opened",
                "if my ${p_name} blind becomes opened",
                "if my ${p_name} blinds become opened",
                "if my ${p_name} blind changes to opened",
                "if my ${p_name} blinds change to opened",
                "if my ${p_name} blind is opened",
                "if my ${p_name} blinds are opened",
                "when my ${p_name} blind opens",
                "if my ${p_name} blind opens",
                "when my ${p_name} blinds open",
                "if my ${p_name} blinds open",
                "when my ${p_name} blind becomes not close",
                "when my ${p_name} blinds become not close",
                "when my ${p_name} blind changes to not close",
                "when my ${p_name} blinds change to not close",
                "if my ${p_name} blind becomes not close",
                "if my ${p_name} blinds become not close",
                "if my ${p_name} blind changes to not close",
                "if my ${p_name} blinds change to not close",
                "when my ${p_name} blind becomes not closed",
                "when my ${p_name} blinds become not closed",
                "when my ${p_name} blind changes to not closed",
                "when my ${p_name} blinds change to not closed",
                "if my ${p_name} blind becomes not closed",
                "if my ${p_name} blinds become not closed",
                "if my ${p_name} blind changes to not closed",
                "if my ${p_name} blinds change to not closed"]];

  stream (p_name : String) := edge( @io.home-assistant.cover.blind(name=p_name).state()) on (state == enum(closed))
  #_[utterances=["when my ${p_name} blind becomes close",
                "when my ${p_name} blinds become close",
                "when my ${p_name} blind changes to close",
                "when my ${p_name} blinds change to close",
                "when my ${p_name} blind is close",
                "when my ${p_name} blinds are close",
                "if my ${p_name} blind becomes close",
                "if my ${p_name} blinds become close",
                "if my ${p_name} blind changes to close",
                "if my ${p_name} blinds change to close",
                "if my ${p_name} blind is close",
                "if my ${p_name} blinds are close",
                "when my ${p_name} blind becomes closed",
                "when my ${p_name} blinds become closed",
                "when my ${p_name} blind changes to closed",
                "when my ${p_name} blinds change to closed",
                "when my ${p_name} blind is closed",
                "when my ${p_name} blinds are closed",
                "if my ${p_name} blind becomes closed",
                "if my ${p_name} blinds become closed",
                "if my ${p_name} blind changes to closed",
                "if my ${p_name} blinds change to closed",
                "if my ${p_name} blind is closed",
                "if my ${p_name} blinds are closed",
                "when my ${p_name} blind closes",
                "if my ${p_name} blind closes",
                "when my ${p_name} blinds close",
                "if my ${p_name} blinds close",
                "when my ${p_name} blind becomes not open",
                "when my ${p_name} blinds become not open",
                "when my ${p_name} blind changes to not open",
                "when my ${p_name} blinds change to not open",
                "if my ${p_name} blind becomes not open",
                "if my ${p_name} blinds become not open",
                "if my ${p_name} blind changes to not open",
                "if my ${p_name} blinds change to not open",
                "when my ${p_name} blind becomes not opened",
                "when my ${p_name} blinds become not opened",
                "when my ${p_name} blind changes to not opened",
                "when my ${p_name} blinds change to not opened",
                "if my ${p_name} blind becomes not opened",
                "if my ${p_name} blinds become not opened",
                "if my ${p_name} blind changes to not opened",
                "if my ${p_name} blinds change to not opened"]];

  action (p_name : String) := @io.home-assistant.cover.blind(name=p_name).open_cover()
  #_[utterances=["open my ${p_name} blind",
                "open my ${p_name} blinds",
                "open the ${p_name} blind",
                "open the ${p_name} blinds",
                "open ${p_name} blind",
                "open ${p_name} blinds"]];

  action (p_name : String) := @io.home-assistant.cover.blind(name=p_name).close_cover()
  #_[utterances=["close my ${p_name} blind",
                "close my ${p_name} blinds",
                "close the ${p_name} blind",
                "close the ${p_name} blinds",
                "close ${p_name} blind",
                "close ${p_name} blinds"]];
}