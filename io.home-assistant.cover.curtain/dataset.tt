dataset @io.home-assistant.cover.curtain language "en" {

  program := now => @io.home-assistant.cover.curtain.state() => notify
  #_[utterances=["what is the state of my curtain?",
                "is my curtain open?",
                "are my curtains open?",
                "check if my curtain is open",
                "check if my curtains are open",
                "is my curtain opened?",
                "are my curtains opened?",
                "check if my curtain is opened",
                "check if my curtains are opened",
                "is my curtain close?",
                "are my curtains close?",
                "check if my curtain is close",
                "check if my curtains are close",
                "is my curtain closed?",
                "are my curtains closed?",
                "check if my curtain is closed",
                "check if my curtains are closed",
                "check if my curtain is open or close",
                "check if my curtains are open or close",
                "check if my curtain is open or closed",
                "check if my curtains are open or closed",
                "check if my curtain is opened or close",
                "check if my curtains are opened or close",
                "check if my curtain is opened or closed",
                "check if my curtains are opened or closed"]];

  query := @io.home-assistant.cover.curtain.state()
  #_[utterances=["the state of my curtain",
                "if my curtain is open or close",
                "if my curtains are open or close",
                "whether my curtain is open or close",
                "whether my curtains are open or close",
                "if my curtain is open or closed",
                "if my curtains are open or closed",
                "whether my curtain is open or closed",
                "whether my curtains are open or closed",
                "if my curtain is opened or close",
                "if my curtains are opened or close",
                "whether my curtain is opened or close",
                "whether my curtains are opened or close",
                "if my curtain is opened or closed",
                "if my curtains are opened or closed",
                "whether my curtain is opened or closed",
                "whether my curtains are opened or closed"]];

  stream := monitor @io.home-assistant.cover.curtain.state()
  #_[utterances=["when the state of my curtain changes",
                 "when the state of my curtains change",
                 "when my curtain changes state",
                 "when my curtains change state",
                 "when my curtain changes",
                 "when my curtains change"]];

  stream (p_state : Enum(open, closed)) := edge( @io.home-assistant.cover.curtain.state()) on (state == p_state)
  #_[utterances=["when my curtain becomes ${p_state}",
                "when my curtains become ${p_state}",
                "when my curtain is ${p_state}",
                "when my curtains are ${p_state}",
                "when my curtain changes to ${p_state}",
                "when my curtains change to ${p_state}",
                "if my curtain becomes ${p_state}",
                "if my curtains become ${p_state}",
                "if my curtain is ${p_state}",
                "if my curtains are ${p_state}",
                "if my curtain changes to ${p_state}",
                "if my curtains change to ${p_state}"]];

  stream := edge( @io.home-assistant.cover.curtain.state()) on (state == enum(open))
  #_[utterances=["when my curtain becomes open",
                "when my curtains become open",
                "when my curtain changes to open",
                "when my curtains change to open",
                "when my curtain is open",
                "when my curtains are open",
                "if my curtain becomes open",
                "if my curtains become open",
                "if my curtain changes to open",
                "if my curtains change to open",
                "if my curtain is open",
                "if my curtains are open",
                "when my curtain becomes opened",
                "when my curtains become opened",
                "when my curtain changes to opened",
                "when my curtains change to opened",
                "when my curtain is opened",
                "when my curtains are opened",
                "if my curtain becomes opened",
                "if my curtains become opened",
                "if my curtain changes to opened",
                "if my curtains change to opened",
                "if my curtain is opened",
                "if my curtains are opened",
                "when my curtain opens",
                "if my curtain opens",
                "when my curtains open",
                "if my curtains open",
                "when my curtain becomes not close",
                "when my curtains become not close",
                "when my curtain changes to not close",
                "when my curtains change to not close",
                "if my curtain becomes not close",
                "if my curtains become not close",
                "if my curtain changes to not close",
                "if my curtains change to not close",
                "when my curtain becomes not closed",
                "when my curtains become not closed",
                "when my curtain changes to not closed",
                "when my curtains change to not closed",
                "if my curtain becomes not closed",
                "if my curtains become not closed",
                "if my curtain changes to not closed",
                "if my curtains change to not closed"]];

  stream := edge( @io.home-assistant.cover.curtain.state()) on (state == enum(closed))
  #_[utterances=["when my curtain becomes close",
                "when my curtains become close",
                "when my curtain changes to close",
                "when my curtains change to close",
                "when my curtain is close",
                "when my curtains are close",
                "if my curtain becomes close",
                "if my curtains become close",
                "if my curtain changes to close",
                "if my curtains change to close",
                "if my curtain is close",
                "if my curtains are close",
                "when my curtain becomes closed",
                "when my curtains become closed",
                "when my curtain changes to closed",
                "when my curtains change to closed",
                "when my curtain is closed",
                "when my curtains are closed",
                "if my curtain becomes closed",
                "if my curtains become closed",
                "if my curtain changes to closed",
                "if my curtains change to closed",
                "if my curtain is closed",
                "if my curtains are closed",
                "when my curtain closes",
                "if my curtain closes",
                "when my curtains close",
                "if my curtains close",
                "when my curtain becomes not open",
                "when my curtains become not open",
                "when my curtain changes to not open",
                "when my curtains change to not open",
                "if my curtain becomes not open",
                "if my curtains become not open",
                "if my curtain changes to not open",
                "if my curtains change to not open",
                "when my curtain becomes not opened",
                "when my curtains become not opened",
                "when my curtain changes to not opened",
                "when my curtains change to not opened",
                "if my curtain becomes not opened",
                "if my curtains become not opened",
                "if my curtain changes to not opened",
                "if my curtains change to not opened"]];

  action := @io.home-assistant.cover.curtain.open_cover()
  #_[utterances=["open my curtain",
                "open my curtains",
                "open the curtain",
                "open the curtains",
                "open curtain",
                "open curtains"]];

  action := @io.home-assistant.cover.curtain.close_cover()
  #_[utterances=["close my curtain",
                "close my curtains",
                "close the curtain",
                "close the curtains",
                "close curtain",
                "close curtains"]];

  program (p_name : String) := now => @io.home-assistant.cover.curtain(name=p_name).state() => notify
  #_[utterances=["what is the state of my ${p_name} curtain?",
                "is my ${p_name} curtain open?",
                "are my ${p_name} curtains open?",
                "check if my ${p_name} curtain is open",
                "check if my ${p_name} curtains are open",
                "is my ${p_name} curtain opened?",
                "are my ${p_name} curtains opened?",
                "check if my ${p_name} curtain is opened",
                "check if my ${p_name} curtains are opened",
                "is my ${p_name} curtain close?",
                "are my ${p_name} curtains close?",
                "check if my ${p_name} curtain is close",
                "check if my ${p_name} curtains are close",
                "is my ${p_name} curtain closed?",
                "are my ${p_name} curtains closed?",
                "check if my ${p_name} curtain is closed",
                "check if my ${p_name} curtains are closed",
                "check if my ${p_name} curtain is open or close",
                "check if my ${p_name} curtains are open or close",
                "check if my ${p_name} curtain is open or closed",
                "check if my ${p_name} curtains are open or closed",
                "check if my ${p_name} curtain is opened or close",
                "check if my ${p_name} curtains are opened or close",
                "check if my ${p_name} curtain is opened or closed",
                "check if my ${p_name} curtains are opened or closed"]];

  query (p_name : String) := @io.home-assistant.cover.curtain(name=p_name).state()
  #_[utterances=["the state of my ${p_name} curtain",
                "if my ${p_name} curtain is open or close",
                "if my ${p_name} curtains are open or close",
                "whether my ${p_name} curtain is open or close",
                "whether my ${p_name} curtains are open or close",
                "if my ${p_name} curtain is open or closed",
                "if my ${p_name} curtains are open or closed",
                "whether my ${p_name} curtain is open or closed",
                "whether my ${p_name} curtains are open or closed",
                "if my ${p_name} curtain is opened or close",
                "if my ${p_name} curtains are opened or close",
                "whether my ${p_name} curtain is opened or close",
                "whether my ${p_name} curtains are opened or close",
                "if my ${p_name} curtain is opened or closed",
                "if my ${p_name} curtains are opened or closed",
                "whether my ${p_name} curtain is opened or closed",
                "whether my ${p_name} curtains are opened or closed"]];

  stream (p_name : String) := monitor @io.home-assistant.cover.curtain(name=p_name).state()
  #_[utterances=["when the state of my ${p_name} curtain changes",
                 "when the state of my ${p_name} curtains change",
                 "when my ${p_name} curtain changes state",
                 "when my ${p_name} curtains change state",
                 "when my ${p_name} curtain changes",
                 "when my ${p_name} curtains change"]];

  stream (p_name : String, p_state : Enum(open, closed)) := edge( @io.home-assistant.cover.curtain(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} curtain becomes ${p_state}",
                "when my ${p_name} curtains become ${p_state}",
                "when my ${p_name} curtain is ${p_state}",
                "when my ${p_name} curtains are ${p_state}",
                "when my ${p_name} curtain changes to ${p_state}",
                "when my ${p_name} curtains change to ${p_state}",
                "if my ${p_name} curtain becomes ${p_state}",
                "if my ${p_name} curtains become ${p_state}",
                "if my ${p_name} curtain is ${p_state}",
                "if my ${p_name} curtains are ${p_state}",
                "if my ${p_name} curtain changes to ${p_state}",
                "if my ${p_name} curtains change to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.cover.curtain(name=p_name).state()) on (state == enum(open))
  #_[utterances=["when my ${p_name} curtain becomes open",
                "when my ${p_name} curtains become open",
                "when my ${p_name} curtain changes to open",
                "when my ${p_name} curtains change to open",
                "when my ${p_name} curtain is open",
                "when my ${p_name} curtains are open",
                "if my ${p_name} curtain becomes open",
                "if my ${p_name} curtains become open",
                "if my ${p_name} curtain changes to open",
                "if my ${p_name} curtains change to open",
                "if my ${p_name} curtain is open",
                "if my ${p_name} curtains are open",
                "when my ${p_name} curtain becomes opened",
                "when my ${p_name} curtains become opened",
                "when my ${p_name} curtain changes to opened",
                "when my ${p_name} curtains change to opened",
                "when my ${p_name} curtain is opened",
                "when my ${p_name} curtains are opened",
                "if my ${p_name} curtain becomes opened",
                "if my ${p_name} curtains become opened",
                "if my ${p_name} curtain changes to opened",
                "if my ${p_name} curtains change to opened",
                "if my ${p_name} curtain is opened",
                "if my ${p_name} curtains are opened",
                "when my ${p_name} curtain opens",
                "if my ${p_name} curtain opens",
                "when my ${p_name} curtains open",
                "if my ${p_name} curtains open",
                "when my ${p_name} curtain becomes not close",
                "when my ${p_name} curtains become not close",
                "when my ${p_name} curtain changes to not close",
                "when my ${p_name} curtains change to not close",
                "if my ${p_name} curtain becomes not close",
                "if my ${p_name} curtains become not close",
                "if my ${p_name} curtain changes to not close",
                "if my ${p_name} curtains change to not close",
                "when my ${p_name} curtain becomes not closed",
                "when my ${p_name} curtains become not closed",
                "when my ${p_name} curtain changes to not closed",
                "when my ${p_name} curtains change to not closed",
                "if my ${p_name} curtain becomes not closed",
                "if my ${p_name} curtains become not closed",
                "if my ${p_name} curtain changes to not closed",
                "if my ${p_name} curtains change to not closed"]];

  stream (p_name : String) := edge( @io.home-assistant.cover.curtain(name=p_name).state()) on (state == enum(closed))
  #_[utterances=["when my ${p_name} curtain becomes close",
                "when my ${p_name} curtains become close",
                "when my ${p_name} curtain changes to close",
                "when my ${p_name} curtains change to close",
                "when my ${p_name} curtain is close",
                "when my ${p_name} curtains are close",
                "if my ${p_name} curtain becomes close",
                "if my ${p_name} curtains become close",
                "if my ${p_name} curtain changes to close",
                "if my ${p_name} curtains change to close",
                "if my ${p_name} curtain is close",
                "if my ${p_name} curtains are close",
                "when my ${p_name} curtain becomes closed",
                "when my ${p_name} curtains become closed",
                "when my ${p_name} curtain changes to closed",
                "when my ${p_name} curtains change to closed",
                "when my ${p_name} curtain is closed",
                "when my ${p_name} curtains are closed",
                "if my ${p_name} curtain becomes closed",
                "if my ${p_name} curtains become closed",
                "if my ${p_name} curtain changes to closed",
                "if my ${p_name} curtains change to closed",
                "if my ${p_name} curtain is closed",
                "if my ${p_name} curtains are closed",
                "when my ${p_name} curtain closes",
                "if my ${p_name} curtain closes",
                "when my ${p_name} curtains close",
                "if my ${p_name} curtains close",
                "when my ${p_name} curtain becomes not open",
                "when my ${p_name} curtains become not open",
                "when my ${p_name} curtain changes to not open",
                "when my ${p_name} curtains change to not open",
                "if my ${p_name} curtain becomes not open",
                "if my ${p_name} curtains become not open",
                "if my ${p_name} curtain changes to not open",
                "if my ${p_name} curtains change to not open",
                "when my ${p_name} curtain becomes not opened",
                "when my ${p_name} curtains become not opened",
                "when my ${p_name} curtain changes to not opened",
                "when my ${p_name} curtains change to not opened",
                "if my ${p_name} curtain becomes not opened",
                "if my ${p_name} curtains become not opened",
                "if my ${p_name} curtain changes to not opened",
                "if my ${p_name} curtains change to not opened"]];

  action (p_name : String) := @io.home-assistant.cover.curtain(name=p_name).open_cover()
  #_[utterances=["open my ${p_name} curtain",
                "open my ${p_name} curtains",
                "open the ${p_name} curtain",
                "open the ${p_name} curtains",
                "open ${p_name} curtain",
                "open ${p_name} curtains"]];

  action (p_name : String) := @io.home-assistant.cover.curtain(name=p_name).close_cover()
  #_[utterances=["close my ${p_name} curtain",
                "close my ${p_name} curtains",
                "close the ${p_name} curtain",
                "close the ${p_name} curtains",
                "close ${p_name} curtain",
                "close ${p_name} curtains"]];
}