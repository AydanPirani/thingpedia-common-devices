dataset @io.home-assistant.cover.shade language "en" {

  program := now => @io.home-assistant.cover.shade.state() => notify
  #_[utterances=["what is the state of my shade?",
                "is my shade open?",
                "are my shades open?",
                "check if my shade is open",
                "check if my shades are open",
                "is my shade opened?",
                "are my shades opened?",
                "check if my shade is opened",
                "check if my shades are opened",
                "is my shade close?",
                "are my shades close?",
                "check if my shade is close",
                "check if my shades are close",
                "is my shade closed?",
                "are my shades closed?",
                "check if my shade is closed",
                "check if my shades are closed",
                "check if my shade is open or close",
                "check if my shades are open or close",
                "check if my shade is open or closed",
                "check if my shades are open or closed",
                "check if my shade is opened or close",
                "check if my shades are opened or close",
                "check if my shade is opened or closed",
                "check if my shades are opened or closed"]];

  query := @io.home-assistant.cover.shade.state()
  #_[utterances=["the state of my shade",
                "if my shade is open or close",
                "if my shades are open or close",
                "whether my shade is open or close",
                "whether my shades are open or close",
                "if my shade is open or closed",
                "if my shades are open or closed",
                "whether my shade is open or closed",
                "whether my shades are open or closed",
                "if my shade is opened or close",
                "if my shades are opened or close",
                "whether my shade is opened or close",
                "whether my shades are opened or close",
                "if my shade is opened or closed",
                "if my shades are opened or closed",
                "whether my shade is opened or closed",
                "whether my shades are opened or closed"]];

  stream := monitor @io.home-assistant.cover.shade.state()
  #_[utterances=["when the state of my shade changes",
                 "when the state of my shades change",
                 "when my shade changes state",
                 "when my shades change state",
                 "when my shade changes",
                 "when my shades change"]];

  stream (p_state : Enum(open, closed)) := edge( @io.home-assistant.cover.shade.state()) on (state == p_state)
  #_[utterances=["when my shade becomes ${p_state}",
                "when my shades become ${p_state}",
                "when my shade is ${p_state}",
                "when my shades are ${p_state}",
                "when my shade changes to ${p_state}",
                "when my shades change to ${p_state}",
                "if my shade becomes ${p_state}",
                "if my shades become ${p_state}",
                "if my shade is ${p_state}",
                "if my shades are ${p_state}",
                "if my shade changes to ${p_state}",
                "if my shades change to ${p_state}"]];

  stream := edge( @io.home-assistant.cover.shade.state()) on (state == enum(open))
  #_[utterances=["when my shade becomes open",
                "when my shades become open",
                "when my shade changes to open",
                "when my shades change to open",
                "when my shade is open",
                "when my shades are open",
                "if my shade becomes open",
                "if my shades become open",
                "if my shade changes to open",
                "if my shades change to open",
                "if my shade is open",
                "if my shades are open",
                "when my shade becomes opened",
                "when my shades become opened",
                "when my shade changes to opened",
                "when my shades change to opened",
                "when my shade is opened",
                "when my shades are opened",
                "if my shade becomes opened",
                "if my shades become opened",
                "if my shade changes to opened",
                "if my shades change to opened",
                "if my shade is opened",
                "if my shades are opened",
                "when my shade opens",
                "if my shade opens",
                "when my shades open",
                "if my shades open",
                "when my shade becomes not close",
                "when my shades become not close",
                "when my shade changes to not close",
                "when my shades change to not close",
                "if my shade becomes not close",
                "if my shades become not close",
                "if my shade changes to not close",
                "if my shades change to not close",
                "when my shade becomes not closed",
                "when my shades become not closed",
                "when my shade changes to not closed",
                "when my shades change to not closed",
                "if my shade becomes not closed",
                "if my shades become not closed",
                "if my shade changes to not closed",
                "if my shades change to not closed"]];

  stream := edge( @io.home-assistant.cover.shade.state()) on (state == enum(closed))
  #_[utterances=["when my shade becomes close",
                "when my shades become close",
                "when my shade changes to close",
                "when my shades change to close",
                "when my shade is close",
                "when my shades are close",
                "if my shade becomes close",
                "if my shades become close",
                "if my shade changes to close",
                "if my shades change to close",
                "if my shade is close",
                "if my shades are close",
                "when my shade becomes closed",
                "when my shades become closed",
                "when my shade changes to closed",
                "when my shades change to closed",
                "when my shade is closed",
                "when my shades are closed",
                "if my shade becomes closed",
                "if my shades become closed",
                "if my shade changes to closed",
                "if my shades change to closed",
                "if my shade is closed",
                "if my shades are closed",
                "when my shade closes",
                "if my shade closes",
                "when my shades close",
                "if my shades close",
                "when my shade becomes not open",
                "when my shades become not open",
                "when my shade changes to not open",
                "when my shades change to not open",
                "if my shade becomes not open",
                "if my shades become not open",
                "if my shade changes to not open",
                "if my shades change to not open",
                "when my shade becomes not opened",
                "when my shades become not opened",
                "when my shade changes to not opened",
                "when my shades change to not opened",
                "if my shade becomes not opened",
                "if my shades become not opened",
                "if my shade changes to not opened",
                "if my shades change to not opened"]];

  action := @io.home-assistant.cover.shade.open_cover()
  #_[utterances=["open my shade",
                "open my shades",
                "open the shade",
                "open the shades",
                "open shade",
                "open shades"]];

  action := @io.home-assistant.cover.shade.close_cover()
  #_[utterances=["close my shade",
                "close my shades",
                "close the shade",
                "close the shades",
                "close shade",
                "close shades"]];

  program (p_name : String) := now => @io.home-assistant.cover.shade(name=p_name).state() => notify
  #_[utterances=["what is the state of my ${p_name} shade?",
                "is my ${p_name} shade open?",
                "are my ${p_name} shades open?",
                "check if my ${p_name} shade is open",
                "check if my ${p_name} shades are open",
                "is my ${p_name} shade opened?",
                "are my ${p_name} shades opened?",
                "check if my ${p_name} shade is opened",
                "check if my ${p_name} shades are opened",
                "is my ${p_name} shade close?",
                "are my ${p_name} shades close?",
                "check if my ${p_name} shade is close",
                "check if my ${p_name} shades are close",
                "is my ${p_name} shade closed?",
                "are my ${p_name} shades closed?",
                "check if my ${p_name} shade is closed",
                "check if my ${p_name} shades are closed",
                "check if my ${p_name} shade is open or close",
                "check if my ${p_name} shades are open or close",
                "check if my ${p_name} shade is open or closed",
                "check if my ${p_name} shades are open or closed",
                "check if my ${p_name} shade is opened or close",
                "check if my ${p_name} shades are opened or close",
                "check if my ${p_name} shade is opened or closed",
                "check if my ${p_name} shades are opened or closed"]];

  query (p_name : String) := @io.home-assistant.cover.shade(name=p_name).state()
  #_[utterances=["the state of my ${p_name} shade",
                "if my ${p_name} shade is open or close",
                "if my ${p_name} shades are open or close",
                "whether my ${p_name} shade is open or close",
                "whether my ${p_name} shades are open or close",
                "if my ${p_name} shade is open or closed",
                "if my ${p_name} shades are open or closed",
                "whether my ${p_name} shade is open or closed",
                "whether my ${p_name} shades are open or closed",
                "if my ${p_name} shade is opened or close",
                "if my ${p_name} shades are opened or close",
                "whether my ${p_name} shade is opened or close",
                "whether my ${p_name} shades are opened or close",
                "if my ${p_name} shade is opened or closed",
                "if my ${p_name} shades are opened or closed",
                "whether my ${p_name} shade is opened or closed",
                "whether my ${p_name} shades are opened or closed"]];

  stream (p_name : String) := monitor @io.home-assistant.cover.shade(name=p_name).state()
  #_[utterances=["when the state of my ${p_name} shade changes",
                 "when the state of my ${p_name} shades change",
                 "when my ${p_name} shade changes state",
                 "when my ${p_name} shades change state",
                 "when my ${p_name} shade changes",
                 "when my ${p_name} shades change"]];

  stream (p_name : String, p_state : Enum(open, closed)) := edge( @io.home-assistant.cover.shade(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} shade becomes ${p_state}",
                "when my ${p_name} shades become ${p_state}",
                "when my ${p_name} shade is ${p_state}",
                "when my ${p_name} shades are ${p_state}",
                "when my ${p_name} shade changes to ${p_state}",
                "when my ${p_name} shades change to ${p_state}",
                "if my ${p_name} shade becomes ${p_state}",
                "if my ${p_name} shades become ${p_state}",
                "if my ${p_name} shade is ${p_state}",
                "if my ${p_name} shades are ${p_state}",
                "if my ${p_name} shade changes to ${p_state}",
                "if my ${p_name} shades change to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.cover.shade(name=p_name).state()) on (state == enum(open))
  #_[utterances=["when my ${p_name} shade becomes open",
                "when my ${p_name} shades become open",
                "when my ${p_name} shade changes to open",
                "when my ${p_name} shades change to open",
                "when my ${p_name} shade is open",
                "when my ${p_name} shades are open",
                "if my ${p_name} shade becomes open",
                "if my ${p_name} shades become open",
                "if my ${p_name} shade changes to open",
                "if my ${p_name} shades change to open",
                "if my ${p_name} shade is open",
                "if my ${p_name} shades are open",
                "when my ${p_name} shade becomes opened",
                "when my ${p_name} shades become opened",
                "when my ${p_name} shade changes to opened",
                "when my ${p_name} shades change to opened",
                "when my ${p_name} shade is opened",
                "when my ${p_name} shades are opened",
                "if my ${p_name} shade becomes opened",
                "if my ${p_name} shades become opened",
                "if my ${p_name} shade changes to opened",
                "if my ${p_name} shades change to opened",
                "if my ${p_name} shade is opened",
                "if my ${p_name} shades are opened",
                "when my ${p_name} shade opens",
                "if my ${p_name} shade opens",
                "when my ${p_name} shades open",
                "if my ${p_name} shades open",
                "when my ${p_name} shade becomes not close",
                "when my ${p_name} shades become not close",
                "when my ${p_name} shade changes to not close",
                "when my ${p_name} shades change to not close",
                "if my ${p_name} shade becomes not close",
                "if my ${p_name} shades become not close",
                "if my ${p_name} shade changes to not close",
                "if my ${p_name} shades change to not close",
                "when my ${p_name} shade becomes not closed",
                "when my ${p_name} shades become not closed",
                "when my ${p_name} shade changes to not closed",
                "when my ${p_name} shades change to not closed",
                "if my ${p_name} shade becomes not closed",
                "if my ${p_name} shades become not closed",
                "if my ${p_name} shade changes to not closed",
                "if my ${p_name} shades change to not closed"]];

  stream (p_name : String) := edge( @io.home-assistant.cover.shade(name=p_name).state()) on (state == enum(closed))
  #_[utterances=["when my ${p_name} shade becomes close",
                "when my ${p_name} shades become close",
                "when my ${p_name} shade changes to close",
                "when my ${p_name} shades change to close",
                "when my ${p_name} shade is close",
                "when my ${p_name} shades are close",
                "if my ${p_name} shade becomes close",
                "if my ${p_name} shades become close",
                "if my ${p_name} shade changes to close",
                "if my ${p_name} shades change to close",
                "if my ${p_name} shade is close",
                "if my ${p_name} shades are close",
                "when my ${p_name} shade becomes closed",
                "when my ${p_name} shades become closed",
                "when my ${p_name} shade changes to closed",
                "when my ${p_name} shades change to closed",
                "when my ${p_name} shade is closed",
                "when my ${p_name} shades are closed",
                "if my ${p_name} shade becomes closed",
                "if my ${p_name} shades become closed",
                "if my ${p_name} shade changes to closed",
                "if my ${p_name} shades change to closed",
                "if my ${p_name} shade is closed",
                "if my ${p_name} shades are closed",
                "when my ${p_name} shade closes",
                "if my ${p_name} shade closes",
                "when my ${p_name} shades close",
                "if my ${p_name} shades close",
                "when my ${p_name} shade becomes not open",
                "when my ${p_name} shades become not open",
                "when my ${p_name} shade changes to not open",
                "when my ${p_name} shades change to not open",
                "if my ${p_name} shade becomes not open",
                "if my ${p_name} shades become not open",
                "if my ${p_name} shade changes to not open",
                "if my ${p_name} shades change to not open",
                "when my ${p_name} shade becomes not opened",
                "when my ${p_name} shades become not opened",
                "when my ${p_name} shade changes to not opened",
                "when my ${p_name} shades change to not opened",
                "if my ${p_name} shade becomes not opened",
                "if my ${p_name} shades become not opened",
                "if my ${p_name} shade changes to not opened",
                "if my ${p_name} shades change to not opened"]];

  action (p_name : String) := @io.home-assistant.cover.shade(name=p_name).open_cover()
  #_[utterances=["open my ${p_name} shade",
                "open my ${p_name} shades",
                "open the ${p_name} shade",
                "open the ${p_name} shades",
                "open ${p_name} shade",
                "open ${p_name} shades"]];

  action (p_name : String) := @io.home-assistant.cover.shade(name=p_name).close_cover()
  #_[utterances=["close my ${p_name} shade",
                "close my ${p_name} shades",
                "close the ${p_name} shade",
                "close the ${p_name} shades",
                "close ${p_name} shade",
                "close ${p_name} shades"]];
}