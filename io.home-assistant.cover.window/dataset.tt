dataset @io.home-assistant.cover.window language "en" {

  program := now => @io.home-assistant.cover.window.state() => notify
  #_[utterances=["what is the state of my window?",
                "is my window open?",
                "are my windows open?",
                "check if my window is open",
                "check if my windows are open",
                "is my window opened?",
                "are my windows opened?",
                "check if my window is opened",
                "check if my windows are opened",
                "is my window close?",
                "are my windows close?",
                "check if my window is close",
                "check if my windows are close",
                "is my window closed?",
                "are my windows closed?",
                "check if my window is closed",
                "check if my windows are closed",
                "check if my window is open or close",
                "check if my windows are open or close",
                "check if my window is open or closed",
                "check if my windows are open or closed",
                "check if my window is opened or close",
                "check if my windows are opened or close",
                "check if my window is opened or closed",
                "check if my windows are opened or closed"]];

  query := @io.home-assistant.cover.window.state()
  #_[utterances=["the state of my window",
                "if my window is open or close",
                "if my windows are open or close",
                "whether my window is open or close",
                "whether my windows are open or close",
                "if my window is open or closed",
                "if my windows are open or closed",
                "whether my window is open or closed",
                "whether my windows are open or closed",
                "if my window is opened or close",
                "if my windows are opened or close",
                "whether my window is opened or close",
                "whether my windows are opened or close",
                "if my window is opened or closed",
                "if my windows are opened or closed",
                "whether my window is opened or closed",
                "whether my windows are opened or closed"]];

  stream := monitor @io.home-assistant.cover.window.state()
  #_[utterances=["when the state of my window changes",
                 "when the state of my windows change",
                 "when my window changes state",
                 "when my windows change state",
                 "when my window changes",
                 "when my windows change"]];

  stream (p_state : Enum(open, closed)) := edge( @io.home-assistant.cover.window.state()) on (state == p_state)
  #_[utterances=["when my window becomes ${p_state}",
                "when my windows become ${p_state}",
                "when my window is ${p_state}",
                "when my windows are ${p_state}",
                "when my window changes to ${p_state}",
                "when my windows change to ${p_state}",
                "if my window becomes ${p_state}",
                "if my windows become ${p_state}",
                "if my window is ${p_state}",
                "if my windows are ${p_state}",
                "if my window changes to ${p_state}",
                "if my windows change to ${p_state}"]];

  stream := edge( @io.home-assistant.cover.window.state()) on (state == enum(open))
  #_[utterances=["when my window becomes open",
                "when my windows become open",
                "when my window changes to open",
                "when my windows change to open",
                "when my window is open",
                "when my windows are open",
                "if my window becomes open",
                "if my windows become open",
                "if my window changes to open",
                "if my windows change to open",
                "if my window is open",
                "if my windows are open",
                "when my window becomes opened",
                "when my windows become opened",
                "when my window changes to opened",
                "when my windows change to opened",
                "when my window is opened",
                "when my windows are opened",
                "if my window becomes opened",
                "if my windows become opened",
                "if my window changes to opened",
                "if my windows change to opened",
                "if my window is opened",
                "if my windows are opened",
                "when my window opens",
                "if my window opens",
                "when my windows open",
                "if my windows open",
                "when my window becomes not close",
                "when my windows become not close",
                "when my window changes to not close",
                "when my windows change to not close",
                "if my window becomes not close",
                "if my windows become not close",
                "if my window changes to not close",
                "if my windows change to not close",
                "when my window becomes not closed",
                "when my windows become not closed",
                "when my window changes to not closed",
                "when my windows change to not closed",
                "if my window becomes not closed",
                "if my windows become not closed",
                "if my window changes to not closed",
                "if my windows change to not closed"]];

  stream := edge( @io.home-assistant.cover.window.state()) on (state == enum(closed))
  #_[utterances=["when my window becomes close",
                "when my windows become close",
                "when my window changes to close",
                "when my windows change to close",
                "when my window is close",
                "when my windows are close",
                "if my window becomes close",
                "if my windows become close",
                "if my window changes to close",
                "if my windows change to close",
                "if my window is close",
                "if my windows are close",
                "when my window becomes closed",
                "when my windows become closed",
                "when my window changes to closed",
                "when my windows change to closed",
                "when my window is closed",
                "when my windows are closed",
                "if my window becomes closed",
                "if my windows become closed",
                "if my window changes to closed",
                "if my windows change to closed",
                "if my window is closed",
                "if my windows are closed",
                "when my window closes",
                "if my window closes",
                "when my windows close",
                "if my windows close",
                "when my window becomes not open",
                "when my windows become not open",
                "when my window changes to not open",
                "when my windows change to not open",
                "if my window becomes not open",
                "if my windows become not open",
                "if my window changes to not open",
                "if my windows change to not open",
                "when my window becomes not opened",
                "when my windows become not opened",
                "when my window changes to not opened",
                "when my windows change to not opened",
                "if my window becomes not opened",
                "if my windows become not opened",
                "if my window changes to not opened",
                "if my windows change to not opened"]];

  action := @io.home-assistant.cover.window.open_cover()
  #_[utterances=["open my window",
                "open my windows",
                "open the window",
                "open the windows",
                "open window",
                "open windows"]];

  action := @io.home-assistant.cover.window.close_cover()
  #_[utterances=["close my window",
                "close my windows",
                "close the window",
                "close the windows",
                "close window",
                "close windows"]];

  program (p_name : String) := now => @io.home-assistant.cover.window(name=p_name).state() => notify
  #_[utterances=["what is the state of my ${p_name} window?",
                "is my ${p_name} window open?",
                "are my ${p_name} windows open?",
                "check if my ${p_name} window is open",
                "check if my ${p_name} windows are open",
                "is my ${p_name} window opened?",
                "are my ${p_name} windows opened?",
                "check if my ${p_name} window is opened",
                "check if my ${p_name} windows are opened",
                "is my ${p_name} window close?",
                "are my ${p_name} windows close?",
                "check if my ${p_name} window is close",
                "check if my ${p_name} windows are close",
                "is my ${p_name} window closed?",
                "are my ${p_name} windows closed?",
                "check if my ${p_name} window is closed",
                "check if my ${p_name} windows are closed",
                "check if my ${p_name} window is open or close",
                "check if my ${p_name} windows are open or close",
                "check if my ${p_name} window is open or closed",
                "check if my ${p_name} windows are open or closed",
                "check if my ${p_name} window is opened or close",
                "check if my ${p_name} windows are opened or close",
                "check if my ${p_name} window is opened or closed",
                "check if my ${p_name} windows are opened or closed"]];

  query (p_name : String) := @io.home-assistant.cover.window(name=p_name).state()
  #_[utterances=["the state of my ${p_name} window",
                "if my ${p_name} window is open or close",
                "if my ${p_name} windows are open or close",
                "whether my ${p_name} window is open or close",
                "whether my ${p_name} windows are open or close",
                "if my ${p_name} window is open or closed",
                "if my ${p_name} windows are open or closed",
                "whether my ${p_name} window is open or closed",
                "whether my ${p_name} windows are open or closed",
                "if my ${p_name} window is opened or close",
                "if my ${p_name} windows are opened or close",
                "whether my ${p_name} window is opened or close",
                "whether my ${p_name} windows are opened or close",
                "if my ${p_name} window is opened or closed",
                "if my ${p_name} windows are opened or closed",
                "whether my ${p_name} window is opened or closed",
                "whether my ${p_name} windows are opened or closed"]];

  stream (p_name : String) := monitor @io.home-assistant.cover.window(name=p_name).state()
  #_[utterances=["when the state of my ${p_name} window changes",
                 "when the state of my ${p_name} windows change",
                 "when my ${p_name} window changes state",
                 "when my ${p_name} windows change state",
                 "when my ${p_name} window changes",
                 "when my ${p_name} windows change"]];

  stream (p_name : String, p_state : Enum(open, closed)) := edge( @io.home-assistant.cover.window(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} window becomes ${p_state}",
                "when my ${p_name} windows become ${p_state}",
                "when my ${p_name} window is ${p_state}",
                "when my ${p_name} windows are ${p_state}",
                "when my ${p_name} window changes to ${p_state}",
                "when my ${p_name} windows change to ${p_state}",
                "if my ${p_name} window becomes ${p_state}",
                "if my ${p_name} windows become ${p_state}",
                "if my ${p_name} window is ${p_state}",
                "if my ${p_name} windows are ${p_state}",
                "if my ${p_name} window changes to ${p_state}",
                "if my ${p_name} windows change to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.cover.window(name=p_name).state()) on (state == enum(open))
  #_[utterances=["when my ${p_name} window becomes open",
                "when my ${p_name} windows become open",
                "when my ${p_name} window changes to open",
                "when my ${p_name} windows change to open",
                "when my ${p_name} window is open",
                "when my ${p_name} windows are open",
                "if my ${p_name} window becomes open",
                "if my ${p_name} windows become open",
                "if my ${p_name} window changes to open",
                "if my ${p_name} windows change to open",
                "if my ${p_name} window is open",
                "if my ${p_name} windows are open",
                "when my ${p_name} window becomes opened",
                "when my ${p_name} windows become opened",
                "when my ${p_name} window changes to opened",
                "when my ${p_name} windows change to opened",
                "when my ${p_name} window is opened",
                "when my ${p_name} windows are opened",
                "if my ${p_name} window becomes opened",
                "if my ${p_name} windows become opened",
                "if my ${p_name} window changes to opened",
                "if my ${p_name} windows change to opened",
                "if my ${p_name} window is opened",
                "if my ${p_name} windows are opened",
                "when my ${p_name} window opens",
                "if my ${p_name} window opens",
                "when my ${p_name} windows open",
                "if my ${p_name} windows open",
                "when my ${p_name} window becomes not close",
                "when my ${p_name} windows become not close",
                "when my ${p_name} window changes to not close",
                "when my ${p_name} windows change to not close",
                "if my ${p_name} window becomes not close",
                "if my ${p_name} windows become not close",
                "if my ${p_name} window changes to not close",
                "if my ${p_name} windows change to not close",
                "when my ${p_name} window becomes not closed",
                "when my ${p_name} windows become not closed",
                "when my ${p_name} window changes to not closed",
                "when my ${p_name} windows change to not closed",
                "if my ${p_name} window becomes not closed",
                "if my ${p_name} windows become not closed",
                "if my ${p_name} window changes to not closed",
                "if my ${p_name} windows change to not closed"]];

  stream (p_name : String) := edge( @io.home-assistant.cover.window(name=p_name).state()) on (state == enum(closed))
  #_[utterances=["when my ${p_name} window becomes close",
                "when my ${p_name} windows become close",
                "when my ${p_name} window changes to close",
                "when my ${p_name} windows change to close",
                "when my ${p_name} window is close",
                "when my ${p_name} windows are close",
                "if my ${p_name} window becomes close",
                "if my ${p_name} windows become close",
                "if my ${p_name} window changes to close",
                "if my ${p_name} windows change to close",
                "if my ${p_name} window is close",
                "if my ${p_name} windows are close",
                "when my ${p_name} window becomes closed",
                "when my ${p_name} windows become closed",
                "when my ${p_name} window changes to closed",
                "when my ${p_name} windows change to closed",
                "when my ${p_name} window is closed",
                "when my ${p_name} windows are closed",
                "if my ${p_name} window becomes closed",
                "if my ${p_name} windows become closed",
                "if my ${p_name} window changes to closed",
                "if my ${p_name} windows change to closed",
                "if my ${p_name} window is closed",
                "if my ${p_name} windows are closed",
                "when my ${p_name} window closes",
                "if my ${p_name} window closes",
                "when my ${p_name} windows close",
                "if my ${p_name} windows close",
                "when my ${p_name} window becomes not open",
                "when my ${p_name} windows become not open",
                "when my ${p_name} window changes to not open",
                "when my ${p_name} windows change to not open",
                "if my ${p_name} window becomes not open",
                "if my ${p_name} windows become not open",
                "if my ${p_name} window changes to not open",
                "if my ${p_name} windows change to not open",
                "when my ${p_name} window becomes not opened",
                "when my ${p_name} windows become not opened",
                "when my ${p_name} window changes to not opened",
                "when my ${p_name} windows change to not opened",
                "if my ${p_name} window becomes not opened",
                "if my ${p_name} windows become not opened",
                "if my ${p_name} window changes to not opened",
                "if my ${p_name} windows change to not opened"]];

  action (p_name : String) := @io.home-assistant.cover.window(name=p_name).open_cover()
  #_[utterances=["open my ${p_name} window",
                "open my ${p_name} windows",
                "open the ${p_name} window",
                "open the ${p_name} windows",
                "open ${p_name} window",
                "open ${p_name} windows"]];

  action (p_name : String) := @io.home-assistant.cover.window(name=p_name).close_cover()
  #_[utterances=["close my ${p_name} window",
                "close my ${p_name} windows",
                "close the ${p_name} window",
                "close the ${p_name} windows",
                "close ${p_name} window",
                "close ${p_name} windows"]];
}