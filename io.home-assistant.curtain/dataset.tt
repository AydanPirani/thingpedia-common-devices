dataset @io.home-assistant.curtain language "en" {

  program := now => @io.home-assistant.curtain.state() => notify
  #_[utterances=["is my curtain open?",
                 "are my curtains open?",
                 "check if my curtain is open",
                 "check if my curtains are open",
                 "is the curtain open?",
                 "are the curtains open?",
                 "check if the curtain is open",
                 "check if the curtains are open",
                 "is my curtain opened?",
                 "are my curtains opened?",
                 "check if my curtain is opened",
                 "check if my curtains are opened",
                 "is the curtain opened?",
                 "are the curtains opened?",
                 "check if the curtain is opened",
                 "check if the curtains are opened",
                 "is my curtain closed?",
                 "are my curtains closed?",
                 "check if my curtain is closed",
                 "check if my curtains are closed",
                 "is the curtain closed?",
                 "are the curtains closed?",
                 "check if the curtain is closed",
                 "check if the curtains are closed",
                 "check if my curtain is open or closed",
                 "check if my curtains are open or closed",
                 "check if the curtain is open or closed",
                 "check if the curtains are open or closed",
                 "check if my curtain is opened or closed",
                 "check if my curtains are opened or closed",
                 "check if the curtain is opened or closed",
                 "check if the curtains are opened or closed"]];

  query := @io.home-assistant.curtain.state()
  #_[utterances=["if my curtain is open or closed",
                 "if my curtains are open or closed",
                 "whether my curtain is open or closed",
                 "whether my curtains are open or closed",
                 "if the curtain is open or closed",
                 "if the curtains are open or closed",
                 "whether the curtain is open or closed",
                 "whether the curtains are open or closed",
                 "if my curtain is opened or closed",
                 "if my curtains are opened or closed",
                 "whether my curtain is opened or closed",
                 "whether my curtains are opened or closed",
                 "if the curtain is opened or closed",
                 "if the curtains are opened or closed",
                 "whether the curtain is opened or closed",
                 "whether the curtains are opened or closed"]];

  stream := monitor @io.home-assistant.curtain.state()
  #_[utterances=["when the state of my curtain changes",
                 "when the state of my curtains change",
                 "when the state of the curtain changes",
                 "when the state of the curtains change"]];

  stream (p_state : Enum(open, closed)) := edge( @io.home-assistant.curtain.state()) on (state == p_state)
  #_[utterances=["when my curtain becomes ${p_state}",
                "when my curtains become ${p_state}",
                "when my curtain is ${p_state}",
                "when my curtains are ${p_state}",
                "if my curtain becomes ${p_state}",
                "if my curtains become ${p_state}",
                "if my curtain is ${p_state}",
                "if my curtains are ${p_state}",
                "when the curtain becomes ${p_state}",
                "when the curtains become ${p_state}",
                "when the curtain is ${p_state}",
                "when the curtains are ${p_state}",
                "if the curtain becomes ${p_state}",
                "if the curtains become ${p_state}",
                "if the curtain is ${p_state}",
                "if the curtains are ${p_state}"]];

  stream := edge( @io.home-assistant.curtain.state()) on (state == enum(open))
  #_[utterances=["when my curtain becomes open",
                "when my curtains become open",
                "when my curtain is open",
                "when my curtains are open",
                "if my curtain becomes open",
                "if my curtains become open",
                "if my curtain is open",
                "if my curtains are open",
                "when the curtain becomes open",
                "when the curtains become open",
                "when the curtain is open",
                "when the curtains are open",
                "if the curtain becomes open",
                "if the curtains become open",
                "if the curtain is open",
                "if the curtains are open",
                "when my curtain becomes opened",
                "when my curtains become opened",
                "when my curtain is opened",
                "when my curtains are opened",
                "if my curtain becomes opened",
                "if my curtains become opened",
                "if my curtain is opened",
                "if my curtains are opened",
                "when the curtain becomes opened",
                "when the curtains become opened",
                "when the curtain is opened",
                "when the curtains are opened",
                "if the curtain becomes opened",
                "if the curtains become opened",
                "if the curtain is opened",
                "if the curtains are opened",
                "when my curtain opens",
                "if my curtain opens",
                "when the curtain opens",
                "if the curtain opens",
                "when my curtains open",
                "if my curtains open",
                "when the curtains open",
                "if the curtains open"]];

  stream := edge( @io.home-assistant.curtain.state()) on (state == enum(closed))
  #_[utterances=["when my curtain becomes closed",
                "when my curtains become closed",
                "when my curtain is closed",
                "when my curtains are closed",
                "if my curtain becomes closed",
                "if my curtains become closed",
                "if my curtain is closed",
                "if my curtains are closed",
                "when the curtain becomes closed",
                "when the curtains become closed",
                "when the curtain is closed",
                "when the curtains are closed",
                "if the curtain becomes closed",
                "if the curtains become closed",
                "if the curtain is closed",
                "if the curtains are closed",
                "when my curtain closes",
                "if my curtain closes",
                "when the curtain closes",
                "if the curtain closes",
                "when my curtains close",
                "if my curtains close",
                "when the curtains close",
                "if the curtains close"]];

  action := @io.home-assistant.curtain.open_cover()
  #_[utterances=["open my curtain",
                "open my curtains",
                "open the curtain",
                "open the curtains",
                "open curtain",
                "open curtains"]];

  action := @io.home-assistant.curtain.close_cover()
  #_[utterances=["close my curtain",
                "close my curtains",
                "close the curtain",
                "close the curtains",
                "close curtain",
                "close curtains"]];

  program (p_name : String) := now => @io.home-assistant.curtain(name=p_name).state() => notify
  #_[utterances=["is my ${p_name} curtain open?",
                 "are my ${p_name} curtains open?",
                 "check if my ${p_name} curtain is open",
                 "check if my ${p_name} curtains are open",
                 "is the ${p_name} curtain open?",
                 "are the ${p_name} curtains open?",
                 "check if the ${p_name} curtain is open",
                 "check if the ${p_name} curtains are open",
                 "is my ${p_name} curtain opened?",
                 "are my ${p_name} curtains opened?",
                 "check if my ${p_name} curtain is opened",
                 "check if my ${p_name} curtains are opened",
                 "is the ${p_name} curtain opened?",
                 "are the ${p_name} curtains opened?",
                 "check if the ${p_name} curtain is opened",
                 "check if the ${p_name} curtains are opened",
                 "is my ${p_name} curtain closed?",
                 "are my ${p_name} curtains closed?",
                 "check if my ${p_name} curtain is closed",
                 "check if my ${p_name} curtains are closed",
                 "is the ${p_name} curtain closed?",
                 "are the ${p_name} curtains closed?",
                 "check if the ${p_name} curtain is closed",
                 "check if the ${p_name} curtains are closed",
                 "check if my ${p_name} curtain is open or closed",
                 "check if my ${p_name} curtains are open or closed",
                 "check if the ${p_name} curtain is open or closed",
                 "check if the ${p_name} curtains are open or closed",
                 "check if my ${p_name} curtain is opened or closed",
                 "check if my ${p_name} curtains are opened or closed",
                 "check if the ${p_name} curtain is opened or closed",
                 "check if the ${p_name} curtains are opened or closed"]];

  query (p_name : String) := @io.home-assistant.curtain(name=p_name).state()
  #_[utterances=["if my ${p_name} curtain is open or closed",
                 "if my ${p_name} curtains are open or closed",
                 "whether my ${p_name} curtain is open or closed",
                 "whether my ${p_name} curtains are open or closed",
                 "if the ${p_name} curtain is open or closed",
                 "if the ${p_name} curtains are open or closed",
                 "whether the ${p_name} curtain is open or closed",
                 "whether the ${p_name} curtains are open or closed",
                 "if my ${p_name} curtain is opened or closed",
                 "if my ${p_name} curtains are opened or closed",
                 "whether my ${p_name} curtain is opened or closed",
                 "whether my ${p_name} curtains are opened or closed",
                 "if the ${p_name} curtain is opened or closed",
                 "if the ${p_name} curtains are opened or closed",
                 "whether the ${p_name} curtain is opened or closed",
                 "whether the ${p_name} curtains are opened or closed"]];

  stream (p_name : String) := monitor @io.home-assistant.curtain(name=p_name).state()
  #_[utterances=["when the state of my ${p_name} curtain changes",
                 "when the state of my ${p_name} curtains change",
                 "when the state of the ${p_name} curtain changes",
                 "when the state of the ${p_name} curtains change"]];

  stream (p_name : String, p_state : Enum(open, closed)) := edge( @io.home-assistant.curtain(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} curtain becomes ${p_state}",
                "when my ${p_name} curtains become ${p_state}",
                "when my ${p_name} curtain is ${p_state}",
                "when my ${p_name} curtains are ${p_state}",
                "if my ${p_name} curtain becomes ${p_state}",
                "if my ${p_name} curtains become ${p_state}",
                "if my ${p_name} curtain is ${p_state}",
                "if my ${p_name} curtains are ${p_state}",
                "when the ${p_name} curtain becomes ${p_state}",
                "when the ${p_name} curtains become ${p_state}",
                "when the ${p_name} curtain is ${p_state}",
                "when the ${p_name} curtains are ${p_state}",
                "if the ${p_name} curtain becomes ${p_state}",
                "if the ${p_name} curtains become ${p_state}",
                "if the ${p_name} curtain is ${p_state}",
                "if the ${p_name} curtains are ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.curtain(name=p_name).state()) on (state == enum(open))
  #_[utterances=["when my ${p_name} curtain becomes open",
                "when my ${p_name} curtains become open",
                "when my ${p_name} curtain is open",
                "when my ${p_name} curtains are open",
                "if my ${p_name} curtain becomes open",
                "if my ${p_name} curtains become open",
                "if my ${p_name} curtain is open",
                "if my ${p_name} curtains are open",
                "when the ${p_name} curtain becomes open",
                "when the ${p_name} curtains become open",
                "when the ${p_name} curtain is open",
                "when the ${p_name} curtains are open",
                "if the ${p_name} curtain becomes open",
                "if the ${p_name} curtains become open",
                "if the ${p_name} curtain is open",
                "if the ${p_name} curtains are open",
                "when my ${p_name} curtain becomes opened",
                "when my ${p_name} curtains become opened",
                "when my ${p_name} curtain is opened",
                "when my ${p_name} curtains are opened",
                "if my ${p_name} curtain becomes opened",
                "if my ${p_name} curtains become opened",
                "if my ${p_name} curtain is opened",
                "if my ${p_name} curtains are opened",
                "when the ${p_name} curtain becomes opened",
                "when the ${p_name} curtains become opened",
                "when the ${p_name} curtain is opened",
                "when the ${p_name} curtains are opened",
                "if the ${p_name} curtain becomes opened",
                "if the ${p_name} curtains become opened",
                "if the ${p_name} curtain is opened",
                "if the ${p_name} curtains are opened",
                "when my ${p_name} curtain opens",
                "if my ${p_name} curtain opens",
                "when the ${p_name} curtain opens",
                "if the ${p_name} curtain opens",
                "when my ${p_name} curtains open",
                "if my ${p_name} curtains open",
                "when the ${p_name} curtains open",
                "if the ${p_name} curtains open"]];

  stream (p_name : String) := edge( @io.home-assistant.curtain(name=p_name).state()) on (state == enum(closed))
  #_[utterances=["when my ${p_name} curtain becomes closed",
                "when my ${p_name} curtains become closed",
                "when my ${p_name} curtain is closed",
                "when my ${p_name} curtains are closed",
                "if my ${p_name} curtain becomes closed",
                "if my ${p_name} curtains become closed",
                "if my ${p_name} curtain is closed",
                "if my ${p_name} curtains are closed",
                "when the ${p_name} curtain becomes closed",
                "when the ${p_name} curtains become closed",
                "when the ${p_name} curtain is closed",
                "when the ${p_name} curtains are closed",
                "if the ${p_name} curtain becomes closed",
                "if the ${p_name} curtains become closed",
                "if the ${p_name} curtain is closed",
                "if the ${p_name} curtains are closed",
                "when my ${p_name} curtain closes",
                "if my ${p_name} curtain closes",
                "when the ${p_name} curtain closes",
                "if the ${p_name} curtain closes",
                "when my ${p_name} curtains close",
                "if my ${p_name} curtains close",
                "when the ${p_name} curtains close",
                "if the ${p_name} curtains close"]];

  action (p_name : String) := @io.home-assistant.curtain(name=p_name).open_cover()
  #_[utterances=["open my ${p_name} curtain",
                "open my ${p_name} curtains",
                "open the ${p_name} curtain",
                "open the ${p_name} curtains",
                "open ${p_name} curtain",
                "open ${p_name} curtains"]];

  action (p_name : String) := @io.home-assistant.curtain(name=p_name).close_cover()
  #_[utterances=["close my ${p_name} curtain",
                "close my ${p_name} curtains",
                "close the ${p_name} curtain",
                "close the ${p_name} curtains",
                "close ${p_name} curtain",
                "close ${p_name} curtains"]];
}