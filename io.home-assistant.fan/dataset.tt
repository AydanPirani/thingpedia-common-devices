dataset @io.home-assistant.fan language "en" {

  program := now => @io.home-assistant.fan.state() => notify
  #_[utterances=["is my fan on?",
                "check if my fan is on",
                "is my fan turned on?",
                "is my fan switched on?",
                "check if my fan is turned on",
                "check if my fan is switched on",
                "is my fan off?",
                "check if my fan is off",
                "is my fan turned off?",
                "is my fan switched off?",
                "check if my fan is turned off",
                "check if my fan is switched off",
                "check if my fan is on or off",
                "check if my fan is on or turned off",
                "check if my fan is on or switched off",
                "check if my fan is turned on or off",
                "check if my fan is switched on or off",
                "check if my fan is turned on or turned off",
                "check if my fan is turned on or switched off",
                "check if my fan is switched on or turned off",
                "check if my fan is switched on or switched off"]];

  query := @io.home-assistant.fan.state()
  #_[utterances=["if my fan is on or off",
                "whether my fan is on or off",
                "if my fan is on or turned off",
                "if my fan is on or switched off",
                "whether my fan is on or turned off",
                "whether my fan is on or switched off",
                "if my fan is turned on or off",
                "if my fan is switched on or off",
                "whether my fan is turned on or off",
                "whether my fan is switched on or off",
                "if my fan is turned on or turned off",
                "if my fan is switched on or turned off",
                "whether my fan is turned on or turned off",
                "whether my fan is turned on or switched off",
                "whether my fan is switched on or turned off",
                "whether my fan is switched on or switched off"]];

  stream := monitor @io.home-assistant.fan.state()
  #_[utterances=["when my fan changes state",
                 "when my fan changes"]];

  stream (p_state : Enum(on, off)) := edge( @io.home-assistant.fan.state()) on (state == p_state)
  #_[utterances=["when my fan turns ${p_state}",
                "when my fan switches ${p_state}",
                "when my fan becomes ${p_state}",
                "when my fan is ${p_state}",
                "when my fan changes to ${p_state}",
                "if my fan turns ${p_state}",
                "if my fan switches ${p_state}",
                "if my fan becomes ${p_state}",
                "if my fan is ${p_state}",
                "if my fan changes to ${p_state}"]];

  stream := edge( @io.home-assistant.fan.state()) on (state == enum(on))
  #_[utterances=["when my fan turns on",
                "when my fan switches on",
                "when my fan becomes on",
                "when my fan changes to on",
                "when my fan is on",
                "if my fan turns on",
                "if my fan switches on",
                "if my fan becomes on",
                "if my fan changes to on",
                "if my fan is on",
                "when my fan becomes turned on",
                "when my fan becomes switched on",
                "when my fan is turned on",
                "when my fan is switched on",
                "if my fan becomes turned on",
                "if my fan becomes switched on",
                "if my fan is turned on",
                "if my fan is switched on"]];

  stream := edge( @io.home-assistant.fan.state()) on (state == enum(off))
  #_[utterances=["when my fan turns off",
                "when my fan switches off",
                "when my fan becomes off",
                "when my fan changes to off",
                "when my fan is off",
                "if my fan turns off",
                "if my fan switches off",
                "if my fan becomes off",
                "if my fan changes to off",
                "if my fan is off",
                "when my fan becomes turned off",
                "when my fan becomes switched off",
                "when my fan is turned off",
                "when my fan is switched off",
                "if my fan becomes turned off",
                "if my fan becomes switched off",
                "if my fan is turned off",
                "if my fan is switched off"]];

  action := @io.home-assistant.fan.turn_on()
  #_[utterances=["on my fan",
                "turn on my fan",
                "switch on my fan",
                "on the fan",
                "turn on the fan",
                "switch on the fan",
                "on fan",
                "turn on fan",
                "switch off fan"]];

  action := @io.home-assistant.fan.turn_off()
  #_[utterances=["off my fan",
                "turn off my fan",
                "switch off my fan",
                "off the fan",
                "turn off the fan",
                "switch off the fan",
                "off fan",
                "turn off fan",
                "switch off fan"]];

  action := @io.home-assistant.fan.start_oscillate()
  #_[utterances=["oscillate my fan",
                "move my fan",
                "turn my fan",
                "make my fan oscillate",
                "make my fan turn",
                "make my fan move",
                "oscillate the fan",
                "move the fan",
                "turn the fan",
                "make the fan oscillate",
                "make the fan turn",
                "make the fan move",
                "oscillate fan",
                "move fan",
                "turn fan",
                "make fan oscillate",
                "make fan turn",
                "make fan move",]];

  action := @io.home-assistant.fan.stop_oscillate()
  #_[utterances=["stop my fan from oscillating",
                 "stop my fan from turning",
                 "stop my fan from moving",
                 "stop my fan oscillation",
                 "stop my fan turning",
                 "stop my fan moving",
                 "stop oscillating my fan",
                 "stop turning my fan",
                 "stop moving my fan",
                 "stop the fan from oscillating",
                 "stop the fan from turning",
                 "stop the fan from moving",
                 "stop the fan oscillation",
                 "stop the fan turning",
                 "stop the fan moving",
                 "stop oscillating the fan",
                 "stop turning the fan",
                 "stop moving the fan",
                 "stop fan from oscillating",
                 "stop fan from turning",
                 "stop fan from moving",
                 "stop fan oscillation",
                 "stop fan turning",
                 "stop fan moving",
                 "stop oscillating fan",
                 "stop turning fan",
                 "stop moving fan"]];

  program (p_name : String) := now => @io.home-assistant.fan(name=p_name).state() => notify
  #_[utterances=["is my ${p_name} fan on?",
                "check if my ${p_name} fan is on",
                "is my ${p_name} fan turned on?",
                "is my ${p_name} fan switched on?",
                "check if my ${p_name} fan is turned on",
                "check if my ${p_name} fan is switched on",
                "is my ${p_name} fan off?",
                "check if my ${p_name} fan is off",
                "is my ${p_name} fan turned off?",
                "is my ${p_name} fan switched off?",
                "check if my ${p_name} fan is turned off",
                "check if my ${p_name} fan is switched off",
                "check if my ${p_name} fan is on or off",
                "check if my ${p_name} fan is on or turned off",
                "check if my ${p_name} fan is on or switched off",
                "check if my ${p_name} fan is turned on or off",
                "check if my ${p_name} fan is switched on or off",
                "check if my ${p_name} fan is turned on or turned off",
                "check if my ${p_name} fan is turned on or switched off",
                "check if my ${p_name} fan is switched on or turned off",
                "check if my ${p_name} fan is switched on or switched off"]];

  query (p_name : String) := @io.home-assistant.fan(name=p_name).state()
  #_[utterances=["if my ${p_name} fan is on or off",
                "whether my ${p_name} fan is on or off",
                "if my ${p_name} fan is on or turned off",
                "if my ${p_name} fan is on or switched off",
                "whether my ${p_name} fan is on or turned off",
                "whether my ${p_name} fan is on or switched off",
                "if my ${p_name} fan is turned on or off",
                "if my ${p_name} fan is switched on or off",
                "whether my ${p_name} fan is turned on or off",
                "whether my ${p_name} fan is switched on or off",
                "if my ${p_name} fan is turned on or turned off",
                "if my ${p_name} fan is switched on or turned off",
                "whether my ${p_name} fan is turned on or turned off",
                "whether my ${p_name} fan is turned on or switched off",
                "whether my ${p_name} fan is switched on or turned off",
                "whether my ${p_name} fan is switched on or switched off"]];

  stream (p_name : String) := monitor @io.home-assistant.fan(name=p_name).state()
  #_[utterances=["when my ${p_name} fan changes state",
                 "when my ${p_name} fan changes"]];

  stream (p_name : String, p_state : Enum(on, off)) := edge( @io.home-assistant.fan(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} fan turns ${p_state}",
                "when my ${p_name} fan switches ${p_state}",
                "when my ${p_name} fan becomes ${p_state}",
                "when my ${p_name} fan is ${p_state}",
                "when my ${p_name} fan changes to ${p_state}",
                "if my ${p_name} fan turns ${p_state}",
                "if my ${p_name} fan switches ${p_state}",
                "if my ${p_name} fan becomes ${p_state}",
                "if my ${p_name} fan is ${p_state}",
                "if my ${p_name} fan changes to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.fan(name=p_name).state()) on (state == enum(on))
  #_[utterances=["when my ${p_name} fan turns on",
                "when my ${p_name} fan switches on",
                "when my ${p_name} fan becomes on",
                "when my ${p_name} fan changes to on",
                "when my ${p_name} fan is on",
                "if my ${p_name} fan turns on",
                "if my ${p_name} fan switches on",
                "if my ${p_name} fan becomes on",
                "if my ${p_name} fan changes to on",
                "if my ${p_name} fan is on",
                "when my ${p_name} fan becomes turned on",
                "when my ${p_name} fan becomes switched on",
                "when my ${p_name} fan is turned on",
                "when my ${p_name} fan is switched on",
                "if my ${p_name} fan becomes turned on",
                "if my ${p_name} fan becomes switched on",
                "if my ${p_name} fan changes to turned on",
                "if my ${p_name} fan changes to switched on",
                "if my ${p_name} fan is turned on",
                "if my ${p_name} fan is switched on"]];

  stream (p_name : String) := edge( @io.home-assistant.fan(name=p_name).state()) on (state == enum(off))
  #_[utterances=["when my ${p_name} fan turns off",
                "when my ${p_name} fan switches off",
                "when my ${p_name} fan becomes off",
                "when my ${p_name} fan changes to off",
                "when my ${p_name} fan is off",
                "if my ${p_name} fan turns off",
                "if my ${p_name} fan switches off",
                "if my ${p_name} fan becomes off",
                "if my ${p_name} fan changes to off",
                "if my ${p_name} fan is off",
                "when my ${p_name} fan becomes turned off",
                "when my ${p_name} fan becomes switched off",
                "when my ${p_name} fan is turned off",
                "when my ${p_name} fan is switched off",
                "if my ${p_name} fan becomes turned off",
                "if my ${p_name} fan becomes switched off",
                "if my ${p_name} fan changes to turned off",
                "if my ${p_name} fan changes to switched off",
                "if my ${p_name} fan is turned off",
                "if my ${p_name} fan is switched off"]];

  action (p_name : String) := @io.home-assistant.fan(name=p_name).turn_on()
  #_[utterances=["on my ${p_name} fan",
                "turn on my ${p_name} fan",
                "switch on my ${p_name} fan",
                "on the ${p_name} fan",
                "turn on the ${p_name} fan",
                "switch on the ${p_name} fan",
                "on ${p_name} fan",
                "turn on ${p_name} fan",
                "switch on ${p_name} fan"]];

  action (p_name : String) := @io.home-assistant.fan(name=p_name).turn_off()
  #_[utterances=["off my ${p_name} fan",
                "turn off my ${p_name} fan",
                "switch off my ${p_name} fan",
                "off the ${p_name} fan",
                "turn off the ${p_name} fan",
                "switch off the ${p_name} fan",
                "off ${p_name} fan",
                "turn off ${p_name} fan",
                "switch off ${p_name} fan"]];

  action (p_name : String) := @io.home-assistant.fan(name=p_name).start_oscillate()
  #_[utterances=["oscillate my ${p_name} fan",
                "move my ${p_name} fan",
                "turn my ${p_name} fan",
                "make my ${p_name} fan oscillate",
                "make my ${p_name} fan turn",
                "make my ${p_name} fan move",
                "oscillate the ${p_name} fan",
                "move the ${p_name} fan",
                "turn the ${p_name} fan",
                "make the ${p_name} fan oscillate",
                "make the ${p_name} fan turn",
                "make the ${p_name} fan move",
                "oscillate ${p_name} fan",
                "move ${p_name} fan",
                "turn ${p_name} fan",
                "make ${p_name} fan oscillate",
                "make ${p_name} fan turn",
                "make ${p_name} fan move",]];

  action (p_name : String) := @io.home-assistant.fan(name=p_name).stop_oscillate()
  #_[utterances=["stop ${p_name} my fan from oscillating",
                 "stop ${p_name} my fan from turning",
                 "stop ${p_name} my fan from moving",
                 "stop ${p_name} my fan oscillation",
                 "stop ${p_name} my fan turning",
                 "stop ${p_name} my fan moving",
                 "stop oscillating my ${p_name} fan",
                 "stop turning my ${p_name} fan",
                 "stop moving my ${p_name} fan",
                 "stop the ${p_name} fan from oscillating",
                 "stop the ${p_name} fan from turning",
                 "stop the ${p_name} fan from moving",
                 "stop the ${p_name} fan oscillation",
                 "stop the ${p_name} fan turning",
                 "stop the ${p_name} fan moving",
                 "stop oscillating the ${p_name} fan",
                 "stop turning the ${p_name} fan",
                 "stop moving the ${p_name} fan",
                 "stop ${p_name} fan from oscillating",
                 "stop ${p_name} fan from turning",
                 "stop ${p_name} fan from moving",
                 "stop ${p_name} fan oscillation",
                 "stop ${p_name} fan turning",
                 "stop ${p_name} fan moving",
                 "stop oscillating ${p_name} fan",
                 "stop turning ${p_name} fan",
                 "stop moving ${p_name} fan"]];
}