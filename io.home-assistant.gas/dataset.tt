dataset @io.home-assistant.gas language "en" {

  program := now => @io.home-assistant.gas.state() => notify
  #_[utterances=["is the gas sensor detecting gas?",
                 "check if the gas sensor is detecting any gas",
                 "check whether the gas sensor is detecting gas or not"]];

  query := @io.home-assistant.gas.state()
  #_[utterances=["the state of the gas sensor",
                 "if the gas sensor is detecting gas",
                 "whether the gas sensor is detecting any gas"]];

  stream := monitor @io.home-assistant.gas.state()
  #_[utterances=["when the state of the gas sensor changes"]];

  stream (p_state : Enum(detecting, not_detecting)) := edge( @io.home-assistant.gas.state()) on (state == p_state)
  #_[utterances=["when the gas sensor is ${p_state} gas",
                "if the gas sensor is ${p_state} gas"]];

  stream := edge( @io.home-assistant.gas.state()) on (state == enum(detecting))
  #_[utterances=["if the gas sensor detects gas",
                "when my gas sensor detects a gas leak",
                "when the gas sensor smells gas",
                "if my gas sensor is detecting gas leaking from somewhere"]];

  stream := edge( @io.home-assistant.gas.state()) on (state == enum(not_detecting))
  #_[utterances=["when the gas sensor stops detecting gas",
                "if the gas sensor no longer detects gas",
                "when the gas sensor is not detecting gas anymore"]];

  program (p_name : String) := now => @io.home-assistant.gas(name=p_name).state() => notify
  #_[utterances=["is the ${p_name} gas sensor detecting gas?",
                 "check if the ${p_name} gas sensor is detecting any gas",
                 "check whether the ${p_name} gas sensor is detecting gas or not"]];

  query (p_name : String) := @io.home-assistant.gas(name=p_name).state()
  #_[utterances=["the state of the ${p_name} gas sensor",
                 "if the ${p_name} gas sensor is detecting gas",
                 "whether the ${p_name} gas sensor is detecting any gas"]];

  stream (p_name : String) := monitor @io.home-assistant.gas(name=p_name).state()
  #_[utterances=["when the state of the ${p_name} gas sensor changes"]];

  stream (p_name : String, p_state : Enum(detecting, not_detecting)) := edge( @io.home-assistant.gas(name=p_name).state()) on (state == p_state)
  #_[utterances=["when the ${p_name} gas sensor is ${p_state} gas",
                "if the ${p_name} gas sensor is ${p_state} gas"]];

  stream (p_name : String) := edge( @io.home-assistant.gas(name=p_name).state()) on (state == enum(detecting))
  #_[utterances=["if the ${p_name} gas sensor detects gas",
                "when my ${p_name} gas sensor detects a gas leak",
                "when the ${p_name} gas sensor smells gas",
                "if my ${p_name} gas sensor is detecting gas leaking from somewhere"]];

  stream (p_name : String) := edge( @io.home-assistant.gas(name=p_name).state()) on (state == enum(not_detecting))
  #_[utterances=["when the gas sensor stops detecting gas",
                "if the gas sensor no longer detects gas",
                "when the gas sensor is not detecting gas anymore"]];
}