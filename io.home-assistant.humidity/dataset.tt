dataset @io.home-assistant.humidity language "en" {

  program := now => @io.home-assistant.humidity.state() => notify
  #_[utterances=["is it humid?",
                 "check if my humidity sensor says it is humid",
                 "what does my humidity sensor say?",
                 "how humid is it?",
                 "what is the level of humidity?",
                 "how high is the humidity?"]];

  query := @io.home-assistant.humidity.state()
  #_[utterances=["the humidity",
                 "the state of the humidity sensor",
                 "if it is humid"]];

  stream := monitor @io.home-assistant.humidity.state()
  #_[utterances=["when the state of the humidity sensor changes"]];

  stream (p_state : Enum(humid, normal)) := edge( monitor @io.home-assistant.humidity.state()) on (state == p_state)
  #_[utterances=["when the humidity becomes ${p_state}",
                "if the humidity is ${p_state}",
                "when the humidity turns ${p_state}",
                "if the humidity changes to ${p_state}"]];

  stream := edge( monitor @io.home-assistant.humidity.state()) on (state == enum(humid))
  #_[utterances=["when it gets humid",
                 "when the humidity is high",
                 "if it gets very humid",
                 "when start getting super humid",
                 "if it is too humid"]];

  stream := edge( monitor @io.home-assistant.humidity.state()) on (state == enum(normal))
  #_[utterances=["when the humidity is normal",
                "if it is no longer humid",
                "when it is not humid anymore"]];

  stream (p_humidity : Number) := edge (monitor (@io.home-assistant.humidity.state())) on value >= p_humidity
  #_[utterances=["when the sensor 's humidity is higher than $p_humidity %",
                   "if the humidity goes above $p_humidity %"]]

  stream (p_humidity : Number) := edge (monitor (@io.home-assistant.humidity.state())) on value <= p_humidity
  #_[utterances=["when the sensor 's humidity is lower than $p_humidity",
                   "if the humidity of the sensor goes below $p_humidity"]]              

  program (p_name : String) := now => @io.home-assistant.humidity(name=p_name).state() => notify
  #_[utterances=["check if my ${p_name} humidity sensor says it is humid",
                 "what does my ${p_name} humidity sensor say?"]];

  query (p_name : String) := @io.home-assistant.humidity(name=p_name).state()
  #_[utterances=["the state of my ${p_name} humidity sensor"]];

  stream (p_name : String) := monitor @io.home-assistant.humidity(name=p_name).state()
  #_[utterances=["when the state of the ${p_name} humidity sensor changes"]];

  stream (p_name : String, p_state : Enum(humid, normal)) := edge( monitor @io.home-assistant.humidity(name=p_name).state()) on (state == p_state)
  #_[utterances=["when the ${p_name} humidity sensor says it is ${p_state}"]];

  stream (p_name : String, p_humidity : Number) := edge (monitor (@io.home-assistant.humidity(name=p_name).state())) on value >= p_humidity
  #_[utterances=["when the ${p_name} sensor 's humidity is higher than $p_humidity %",
                   "if the humidity of the ${p_name} sensor goes above $p_humidity %"]]

  stream (p_name : String, p_humidity : Number) := edge (monitor (@io.home-assistant.humidity(name=p_name).state())) on value <= p_humidity
  #_[utterances=["when the ${p_name} sensor 's humidity is lower than $p_humidity",
                   "if the humidity of the ${p_name} sensor goes below $p_humidity"]]
}