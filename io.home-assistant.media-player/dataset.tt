dataset @io.home-assistant.media-player language "en" {

  program := now => @io.home-assistant.media-player.state() => notify
  #_[utterances=["is my media player on?",
                "check if my media player is off",
                "is the media player turned on?",
                "check if my media player is switched off",
                "check if my media player is turned on or off",
                "check if my media player is switched on or switched off"]];

  query := @io.home-assistant.media-player.state()
  #_[utterances=["if my media player is on or off",
                 "whether my media player is switched on or switched off"]];

  stream := monitor @io.home-assistant.media-player.state()
  #_[utterances=["when my media player changes state"]];

  stream (p_state : Enum(on, off)) := edge( @io.home-assistant.media-player.state()) on (state == p_state)
  #_[utterances=["when my media player turns ${p_state}",
                "if my media player switches ${p_state}",
                "when the media player becomes ${p_state}",
                "if my media player is ${p_state}",
                "when my media player changes to ${p_state}"]];

  stream := edge( @io.home-assistant.media-player.state()) on (state == enum(on))
  #_[utterances=["when my media player turns on",
                "when I switch on the media player",
                "if the media player becomes on",
                "when my media player gets switched to on",
                "if my media player is on",
                "when my media player is turned on",
                "the moment my media player is switched on"]];

  stream := edge( @io.home-assistant.media-player.state()) on (state == enum(off))
  #_[utterances=["when my media player is turned off",
                "if my media player switches off",
                "the moment my media player becomes off",
                "if my media player is off",
                "when my media player gets turned off"]];

  action (p_power :Enum(on,off)) := @io.home-assistant.media-player.set_power(power=p_power)
  #_[utterances=["turn ${p_power} my ${p_name} media player",
                 "switch ${p_power} the ${p_name} media player",
                 "${p_power} the ${p_name} media player"]]

  action := @io.home-assistant.media-player.set_power(power=enum(on))
  #_[utterances=["on my media player",
                "turn on the media player",
                "switch on my media player",
                "help me turn on the media player",
                "switch on the media player for me"]];

  action := @io.home-assistant.media-player.set_power(power=enum(off))
  #_[utterances=["turn off my media player",
                "switch off the media player",
                "off the media player",
                "turn off the media player",
                "help to off the media player"]];

  action := @io.home-assistant.media-player.volume_up()
  #_[utterances=["increase the volume of the media player",
                 "increase my media player's volume",
                 "make the media player louder"]];

  action := @io.home-assistant.media-player.volume_down()
  #_[utterances=["decrease the volume of my media player",
                 "decrease my media player's volume",
                 "reduce the volume of the media player",
                 "reduce my media player's volume",
                 "make the media player softer"]];

  action := @io.home-assistant.media-player.volume_mute()
  #_[utterances=["mute my media player",
                 "silence my media player's volume",
                 "turn off the volume of the media player"
                 "switch off the sound for my media player"
                 "mute my media player's sound",
                 "make my media player silent"]];

  action := @io.home-assistant.media-player.volume_unmute()
  #_[utterances=["unmute my media player",
                 "unmute the media player's volume",
                 "unmute my media player's sound",
                 "turn on the media player sound",
                 "stop muting my media player"]];

  action (p_volume : Number) := @io.home-assistant.media-player.volume_set(volume=p_volume)
  #_[utterances=["turn my media player sound to ${p_volume}",
                 "set the media player's volume to ${p_volume}"]]

  program (p_name : String) := now => @io.home-assistant.media-player(name=p_name).state() => notify
  #_[utterances=["is my ${p_name} media player on?",
                "check if my ${p_name} media player is off",
                "is the ${p_name} media player turned on?",
                "check if my ${p_name} media player is switched off",
                "check if my ${p_name} media player is turned on or off",
                "check if my ${p_name} media player is switched on or switched off"]];

  query (p_name : String) := @io.home-assistant.media-player(name=p_name).state()
  #_[utterances=["if my ${p_name} media player is on or off",
                 "whether my ${p_name} media player is switched on or switched off"]];

  stream (p_name : String) := monitor @io.home-assistant.media-player(name=p_name).state()
  #_[utterances=["when my ${p_name} media player changes state"]];

  stream (p_name : String, p_state : Enum(on, off)) := edge( @io.home-assistant.media-player(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} media player turns ${p_state}",
                "if my ${p_name} media player switches ${p_state}",
                "when the ${p_name} media player becomes ${p_state}",
                "if my ${p_name} media player is ${p_state}",
                "when my ${p_name} media player changes to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.media-player(name=p_name).state()) on (state == enum(on))
  #_[utterances=["when my ${p_name} media player turns on",
                "when I switch on the ${p_name} media player",
                "if the ${p_name} media player becomes on",
                "when my ${p_name} media player gets switched to on",
                "if my ${p_name} media player is on",
                "when my ${p_name} media player is turned on",
                "the moment my ${p_name} media player is switched on"]];

  stream (p_name : String) := edge( @io.home-assistant.media-player(name=p_name).state()) on (state == enum(off))
  #_[utterances=["when my ${p_name} media player is turned off",
                "if my ${p_name} media player switches off",
                "the moment my ${p_name} media player becomes off",
                "if my ${p_name} media player is off",
                "when my ${p_name} media player gets turned off"]];

  action (p_name : String, p_power :Enum(on,off)) := @io.home-assistant.media-player(name=p_name).set_power(power=p_power)
  #_[utterances=["turn ${p_power} my ${p_name} media player",
                 "switch ${p_power} the ${p_name} media player",
                 "${p_power} the ${p_name} media player"]]

  action (p_name : String) := @io.home-assistant.media-player(name=p_name).set_power(power=enum(on))
  #_[utterances=["on my ${p_name} media player",
                "turn on the ${p_name} media player",
                "switch on my ${p_name} media player",
                "help me turn on the ${p_name} media player",
                "switch on the ${p_name} media player for me"]];

  action (p_name : String) := @io.home-assistant.media-player(name=p_name).set_power(power=enum(off))
  #_[utterances=["turn off my ${p_name} media player",
                "switch off the ${p_name} media player",
                "off the ${p_name} media player",
                "turn off the ${p_name} media player",
                "help to off the ${p_name} media player"]];

  action (p_name : String) := @io.home-assistant.media-player(name=p_name).volume_up()
  #_[utterances=["increase the volume of the ${p_name} media player",
                 "increase my ${p_name} media player's volume",
                 "make the ${p_name} media player louder"]];

  action (p_name : String) := @io.home-assistant.media-player(name=p_name).volume_down()
  #_[utterances=["decrease the volume of my ${p_name} media player",
                 "decrease my ${p_name} media player's volume",
                 "reduce the volume of the ${p_name} media player",
                 "reduce my ${p_name} media player's volume",
                 "make the ${p_name} media player softer"]];

  action (p_name : String) := @io.home-assistant.media-player(name=p_name).volume_mute()
  #_[utterances=["mute my ${p_name} media player",
                 "silence my ${p_name} media player's volume",
                 "turn off the volume of the ${p_name} media player"
                 "switch off the sound for my ${p_name} media player"
                 "mute my ${p_name} media player's sound",
                 "make my ${p_name} media player silent"]];

  action (p_name : String) := @io.home-assistant.media-player(name=p_name).volume_unmute()
  #_[utterances=["unmute my ${p_name} media player",
                 "unmute the ${p_name} media player's volume",
                 "unmute my ${p_name} media player's sound",
                 "turn on the ${p_name} media player sound",
                 "stop muting my ${p_name} media player"]];

  action (p_name : String, p_volume : Number) := @io.home-assistant.media-player(name=p_name).volume_set(volume=p_volume)
  #_[utterances=["turn my ${p_name} media player sound to ${p_volume}",
                 "set the ${p_name} media player's volume to ${p_volume}"]]
}