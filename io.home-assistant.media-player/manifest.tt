abstract class @io.home-assistant.media-player
#_[thingpedia_name="Media Player"]
#_[thingpedia_description="Interface for Home Assistant's Media Player."]
#_[description="Interface for Home Assistant's Media Player."]
#[license="CC-0"]
#[license_gplcompatible=true]
#[subcategory="home"]
{
  monitorable query state(out state : Enum(on,off))
  #_[canonical="switch state"]
  #_[confirmation="the state of your media player"]
  #_[formatted=["Your $__device is ${state}"]];

  action set_power(in req power: Enum(on,off) #_[prompt="Do you want to turn it on or off?"] #_[canonical="power"])
  #_[canonical="set power on $__device"]
  #_[confirmation="turn ${power} $__device"]
  #[confirm=true];

  action volume_up()
  #_[canonical="increase media player volume"]
  #_[confirmation="increase $__device's volume"]
  #[confirm=true];

  action volume_down()
  #_[canonical="decrease media player volume"]
  #_[confirmation="decrease $__device's volume"]
  #[confirm=true];

  action volume_mute()
  #_[canonical="mute media player"]
  #_[confirmation="mute $__device"]
  #[confirm=true];

  action volume_unmute()
  #_[canonical="unmute media player"]
  #_[confirmation="unmute $__device"]
  #[confirm=true];

  action volume_set(in req volume: Number #_[prompt="From 0 to 1, what volume do you want to set?"] #_[canonical="volume"])
  #_[canonical="set volume on media player"]
  #_[confirmation="set $__device's volume to $volume"]
  #[confirm=true];
}