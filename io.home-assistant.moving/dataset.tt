dataset @io.home-assistant.moving language "en" {

  program := now => @io.home-assistant.moving.state() => notify
  #_[utterances=["is the movement sensor moving?",
                 "check if the movement sensor is moving",
                 "is the movement sensor not moving?",
                 "check if the movement sensor is not moving",
                 "is the movement sensor stationary?",
                 "check if the movement sensor is stationary",
                 "check if the movement sensor is moving or not moving",
                 "check if the movement sensor is moving or stationary"]];

  query := @io.home-assistant.moving.state()
  #_[utterances=["the state of the movement sensor",
                 "if the movement sensor is moving or not moving",
                 "whether the movement sensor is moving or not moving",
                 "if the movement sensor is moving or stationary",
                 "whether the movement sensor is moving or stationary"]];

  stream := monitor @io.home-assistant.moving.state()
  #_[utterances=["when the state of the movement sensor changes"]];

  stream (p_state : Enum(moving, not_moving)) := edge( @io.home-assistant.moving.state()) on (state == p_state)
  #_[utterances=["when the movement sensor becomes ${p_state}",
                "when the movement sensor is ${p_state}",
                "when the movement sensor turns ${p_state}",
                "when the movement sensor changes to ${p_state}",
                "if the movement sensor becomes ${p_state}",
                "if the movement sensor is ${p_state}",
                "if the movement sensor turns ${p_state}",
                "if the movement sensor changes to ${p_state}"]];

  stream := edge( @io.home-assistant.moving.state()) on (state == enum(moving))
  #_[utterances=["when the movement sensor detects movement",
                "if the movement sensor detects movement",
                "when the movement sensor detects any movement",
                "if the movement sensor detects any movement",
                "when the movement sensor is moving",
                "if the movement sensor is moving"]];

  stream := edge( @io.home-assistant.moving.state()) on (state == enum(not_moving))
  #_[utterances=["when the movement sensor stops detecting movement",
                "if the movement sensor stops detecting movement",
                "when the movement sensor becomes stationary",
                "if the movement sensor becomes stationary",
                "when the movement sensor is not moving",
                "if the movement sensor is not moving"]];

  program (p_name : String) := now => @io.home-assistant.moving(name=p_name).state() => notify
  #_[utterances=["is the ${p_name} movement sensor moving?",
                 "check if the ${p_name} movement sensor is moving",
                 "is the ${p_name} movement sensor not moving?",
                 "check if the ${p_name} movement sensor is not moving",
                 "is the ${p_name} movement sensor stationary?",
                 "check if the ${p_name} movement sensor is stationary",
                 "check if the ${p_name} movement sensor is moving or not moving",
                 "check if the ${p_name} movement sensor is moving or stationary"]];

  query (p_name : String) := @io.home-assistant.moving(name=p_name).state()
  #_[utterances=["the state of the ${p_name} movement sensor",
                 "if the ${p_name} movement sensor is moving or not moving",
                 "whether the ${p_name} movement sensor is moving or not moving",
                 "if the ${p_name} movement sensor is moving or stationary",
                 "whether the ${p_name} movement sensor is moving or stationary"]];

  stream (p_name : String) := monitor @io.home-assistant.moving(name=p_name).state()
  #_[utterances=["when the state of the ${p_name} movement sensor changes"]];

  stream (p_name : String, p_state : Enum(moving, not_moving)) := edge( @io.home-assistant.moving(name=p_name).state()) on (state == p_state)
  #_[utterances=["when the ${p_name} movement sensor becomes ${p_state}",
                "when the ${p_name} movement sensor is ${p_state}",
                "when the ${p_name} movement sensor turns ${p_state}",
                "when the ${p_name} movement sensor changes to ${p_state}",
                "if the ${p_name} movement sensor becomes ${p_state}",
                "if the ${p_name} movement sensor is ${p_state}",
                "if the ${p_name} movement sensor turns ${p_state}",
                "if the ${p_name} movement sensor changes to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.moving(name=p_name).state()) on (state == enum(moving))
  #_[utterances=["when the ${p_name} movement sensor detects movement",
                "if the ${p_name} movement sensor detects movement",
                "when the ${p_name} movement sensor detects any movement",
                "if the ${p_name} movement sensor detects any movement",
                "when the ${p_name} movement sensor is moving",
                "if the ${p_name} movement sensor is moving"]];

  stream (p_name : String) := edge( @io.home-assistant.moving(name=p_name).state()) on (state == enum(not_moving))
  #_[utterances=["when the ${p_name} movement sensor stops detecting movement",
                "if the ${p_name} movement sensor stops detecting movement",
                "when the ${p_name} movement sensor becomes stationary",
                "if the ${p_name} movement sensor becomes stationary",
                "when the ${p_name} movement sensor is not moving",
                "if the ${p_name} movement sensor is not moving"]];
}