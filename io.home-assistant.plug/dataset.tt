dataset @io.home-assistant.plug language "en" {

  program := now => @io.home-assistant.plug.state() => notify
  #_[utterances=["is my plug plugged?",
                 "check if my plug is plugged",
                 "is my plug unplugged?",
                 "check if my plug is unplugged",
                 "check if my plug is plugged or unplugged",
                 "is the plug plugged?",
                 "check if the plug is plugged",
                 "is the plug unplugged?",
                 "check if the plug is unplugged",
                 "check if the plug is plugged or unplugged"]];

  query := @io.home-assistant.plug.state()
  #_[utterances=["the state of my plug",
                 "if my plug is plugged or unplugged",
                 "whether my plug is plugged or unplugged",
                 "the state of the plug",
                 "if the plug is plugged or unplugged",
                 "whether the plug is plugged or unplugged"]];

  stream := monitor @io.home-assistant.plug.state()
  #_[utterances=["when the state of my plug changes",
                 "when the state of the plug changes"]];

  stream (p_state : Enum(plugged, unplugged)) := edge( @io.home-assistant.plug.state()) on (state == p_state)
  #_[utterances=["when my plug becomes ${p_state}",
                "when my plug is ${p_state}",
                "when my plug turns ${p_state}",
                "when my plug changes to ${p_state}",
                "if my plug becomes ${p_state}",
                "if my plug is ${p_state}",
                "if my plug turns ${p_state}",
                "if my plug changes to ${p_state}",
                "when the plug becomes ${p_state}",
                "when the plug is ${p_state}",
                "when the plug turns ${p_state}",
                "when the plug changes to ${p_state}",
                "if the plug becomes ${p_state}",
                "if the plug is ${p_state}",
                "if the plug turns ${p_state}",
                "if the plug changes to ${p_state}"]];

  stream := edge( @io.home-assistant.plug.state()) on (state == enum(plugged))
  #_[utterances=["when my plug is plugged",
                "if my plug is plugged",
                "when the plug is plugged",
                "if the plug is plugged",
                "when my plug becomes plugged",
                "if my plug becomes plugged",
                "when the plug becomes plugged",
                "if the plug becomes plugged",
                "when my plug gets plugged",
                "if my plug gets plugged",
                "when the plug gets plugged",
                "if the plug gets plugged"]];

  stream := edge( @io.home-assistant.plug.state()) on (state == enum(unplugged))
  #_[utterances=["when my plug is unplugged",
                "if my plug is unplugged",
                "when the plug is unplugged",
                "if the plug is unplugged",
                "when my plug becomes unplugged",
                "if my plug becomes unplugged",
                "when the plug becomes unplugged",
                "if the plug becomes unplugged",
                "when my plug gets unplugged",
                "if my plug gets unplugged",
                "when the plug gets unplugged",
                "if the plug gets unplugged"]];

  program (p_name : String) := now => @io.home-assistant.plug(name=p_name).state() => notify
  #_[utterances=["is my ${p_name} plug plugged?",
                 "check if my ${p_name} plug is plugged",
                 "is my ${p_name} plug unplugged?",
                 "check if my ${p_name} plug is unplugged",
                 "check if my ${p_name} plug is plugged or unplugged",
                 "is the ${p_name} plug plugged?",
                 "check if the ${p_name} plug is plugged",
                 "is the ${p_name} plug unplugged?",
                 "check if the ${p_name} plug is unplugged",
                 "check if the ${p_name} plug is plugged or unplugged"]];

  query (p_name : String) := @io.home-assistant.plug(name=p_name).state()
  #_[utterances=["the state of my ${p_name} plug",
                 "if my ${p_name} plug is plugged or unplugged",
                 "whether my ${p_name} plug is plugged or unplugged",
                 "the state of the ${p_name} plug",
                 "if the ${p_name} plug is plugged or unplugged",
                 "whether the ${p_name} plug is plugged or unplugged"]];

  stream (p_name : String) := monitor @io.home-assistant.plug(name=p_name).state()
  #_[utterances=["when the state of my ${p_name} plug changes",
                 "when the state of the ${p_name} plug changes"]];

  stream (p_name : String, p_state : Enum(plugged, unplugged)) := edge( @io.home-assistant.plug(name=p_name).state()) on (state == p_state)
  #_[utterances=["when my ${p_name} plug becomes ${p_state}",
                "when my ${p_name} plug is ${p_state}",
                "when my ${p_name} plug turns ${p_state}",
                "when my ${p_name} plug changes to ${p_state}",
                "if my ${p_name} plug becomes ${p_state}",
                "if my ${p_name} plug is ${p_state}",
                "if my ${p_name} plug turns ${p_state}",
                "if my ${p_name} plug changes to ${p_state}",
                "when the ${p_name} plug becomes ${p_state}",
                "when the ${p_name} plug is ${p_state}",
                "when the ${p_name} plug turns ${p_state}",
                "when the ${p_name} plug changes to ${p_state}",
                "if the ${p_name} plug becomes ${p_state}",
                "if the ${p_name} plug is ${p_state}",
                "if the ${p_name} plug turns ${p_state}",
                "if the ${p_name} plug changes to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.plug(name=p_name).state()) on (state == enum(plugged))
  #_[utterances=["when my ${p_name} plug is plugged",
                "if my ${p_name} plug is plugged",
                "when the ${p_name} plug is plugged",
                "if the ${p_name} plug is plugged",
                "when my ${p_name} plug becomes plugged",
                "if my ${p_name} plug becomes plugged",
                "when the ${p_name} plug becomes plugged",
                "if the ${p_name} plug becomes plugged",
                "when my ${p_name} plug gets plugged",
                "if my ${p_name} plug gets plugged",
                "when the ${p_name} plug gets plugged",
                "if the ${p_name} plug gets plugged"]];

  stream (p_name : String) := edge( @io.home-assistant.plug(name=p_name).state()) on (state == enum(unplugged))
  #_[utterances=["when my ${p_name} plug is unplugged",
                "if my ${p_name} plug is unplugged",
                "when the ${p_name} plug is unplugged",
                "if the ${p_name} plug is unplugged",
                "when my ${p_name} plug becomes unplugged",
                "if my ${p_name} plug becomes unplugged",
                "when the ${p_name} plug becomes unplugged",
                "if the ${p_name} plug becomes unplugged",
                "when my ${p_name} plug gets unplugged",
                "if my ${p_name} plug gets unplugged",
                "when the ${p_name} plug gets unplugged",
                "if the ${p_name} plug gets unplugged"]];
}