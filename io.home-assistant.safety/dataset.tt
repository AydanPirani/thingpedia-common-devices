dataset @io.home-assistant.safety language "en" {

  program := now => @io.home-assistant.safety.state() => notify
  #_[utterances=["is the safety sensor unsafe?",
                 "check if the safety sensor is unsafe",
                 "is the safety sensor safe?",
                 "check if the safety sensor is safe",
                 "check if the safety sensor is unsafe or safe"]];

  query := @io.home-assistant.safety.state()
  #_[utterances=["the state of the safety sensor",
                 "if the safety sensor is unsafe or safe",
                 "whether the safety sensor is unsafe or safe"]];

  stream := monitor @io.home-assistant.safety.state()
  #_[utterances=["when the state of the safety sensor changes"]];

  stream (p_state : Enum(unsafe, safe)) := edge( @io.home-assistant.safety.state()) on (state == p_state)
  #_[utterances=["when the safety sensor becomes ${p_state}",
                "when the safety sensor is ${p_state}",
                "when the safety sensor turns ${p_state}",
                "when the safety sensor changes to ${p_state}",
                "if the safety sensor becomes ${p_state}",
                "if the safety sensor is ${p_state}",
                "if the safety sensor turns ${p_state}",
                "if the safety sensor changes to ${p_state}"]];

  stream := edge( @io.home-assistant.safety.state()) on (state == enum(unsafe))
  #_[utterances=["when the safety sensor is unsafe",
                "if the safety sensor is unsafe",
                "when the safety sensor becomes unsafe",
                "if the safety sensor becomes unsafe",
                "when the safety sensor turns unsafe",
                "if the safety sensor turns unsafe"]];

  stream := edge( @io.home-assistant.safety.state()) on (state == enum(safe))
  #_[utterances=["when the safety sensor is safe",
                "if the safety sensor is safe",
                "when the safety sensor becomes safe",
                "if the safety sensor becomes safe",
                "when the safety sensor turns safe",
                "if the safety sensor turns safe"]];

  program (p_name : String) := now => @io.home-assistant.safety(name=p_name).state() => notify
  #_[utterances=["is the ${p_name} safety sensor unsafe?",
                 "check if the ${p_name} safety sensor is unsafe",
                 "is the ${p_name} safety sensor safe?",
                 "check if the ${p_name} safety sensor is safe",
                 "check if the ${p_name} safety sensor is unsafe or safe"]];

  query (p_name : String) := @io.home-assistant.safety(name=p_name).state()
  #_[utterances=["the state of the ${p_name} safety sensor",
                 "if the ${p_name} safety sensor is unsafe or safe",
                 "whether the ${p_name} safety sensor is unsafe or safe"]];

  stream (p_name : String) := monitor @io.home-assistant.safety(name=p_name).state()
  #_[utterances=["when the state of the ${p_name} safety sensor changes"]];

  stream (p_name : String, p_state : Enum(unsafe, safe)) := edge( @io.home-assistant.safety(name=p_name).state()) on (state == p_state)
  #_[utterances=["when the ${p_name} safety sensor becomes ${p_state}",
                "when the ${p_name} safety sensor is ${p_state}",
                "when the ${p_name} safety sensor turns ${p_state}",
                "when the ${p_name} safety sensor changes to ${p_state}",
                "if the ${p_name} safety sensor becomes ${p_state}",
                "if the ${p_name} safety sensor is ${p_state}",
                "if the ${p_name} safety sensor turns ${p_state}",
                "if the ${p_name} safety sensor changes to ${p_state}"]];

  stream (p_name : String) := edge( @io.home-assistant.safety(name=p_name).state()) on (state == enum(unsafe))
  #_[utterances=["when the ${p_name} safety sensor is unsafe",
                "if the ${p_name} safety sensor is unsafe",
                "when the ${p_name} safety sensor becomes unsafe",
                "if the ${p_name} safety sensor becomes unsafe",
                "when the ${p_name} safety sensor turns unsafe",
                "if the ${p_name} safety sensor turns unsafe"]];

  stream (p_name : String) := edge( @io.home-assistant.safety(name=p_name).state()) on (state == enum(safe))
  #_[utterances=["when the ${p_name} safety sensor is safe",
                "if the ${p_name} safety sensor is safe",
                "when the ${p_name} safety sensor becomes safe",
                "if the ${p_name} safety sensor becomes safe",
                "when the ${p_name} safety sensor turns safe",
                "if the ${p_name} safety sensor turns safe"]];
}