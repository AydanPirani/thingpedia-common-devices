dataset @io.home-assistant.sound language "en" {

  program := now => @io.home-assistant.sound.state() => notify
  #_[utterances=["is the sound sensor detecting sound?",
                 "check if the sound sensor is detecting sound or not",
                 "check whether the sound sensor is detecting"]];

  query := @io.home-assistant.sound.state()
  #_[utterances=["the state of the sound sensor",
                 "if the sound sensor is detecting any sound,
                 "whether the sound sensor is detecting sound or not"]];

  stream := monitor @io.home-assistant.sound.state()
  #_[utterances=["when the state of the sound sensor changes"]];

  stream (p_state : Enum(detecting, not_detecting)) := edge( monitor @io.home-assistant.sound.state()) on (state == p_state)
  #_[utterances=["when the sound sensor turns ${p_state}",
                "when the sound sensor changes to ${p_state}",
                "if the sound sensor becomes ${p_state}",
                "if the sound sensor is ${p_state}"]];

  stream := edge( monitor @io.home-assistant.sound.state()) on (state == enum(detecting))
  #_[utterances=["when the sound sensor is detecting sound",
                "if the sound sensor is detecting any sound"]];

  stream := edge( monitor @io.home-assistant.sound.state()) on (state == enum(not_detecting))
  #_[utterances=["when the sound sensor is not detecting sound",
                "if the sound sensor is not detecting sound"]];

  program (p_name : String) := now => @io.home-assistant.sound(name=p_name).state() => notify
  #_[utterances=["is the ${p_name} sound sensor detecting?",
                 "check if the ${p_name} sound sensor is detecting or not detecting",
                 "check whether the ${p_name} sound sensor is detecting"]];

  query (p_name : String) := @io.home-assistant.sound(name=p_name).state()
  #_[utterances=["the state of the ${p_name} sound sensor",
                 "if the ${p_name} sound sensor is detecting sound",
                 "whether the ${p_name} sound sensor is detecting sound or not",
                 "if the ${p_name} sound sensor is hearing anything",
                 "whether the ${p_name} sound sensor is hearing anything or not"]];

  stream (p_name : String) := monitor @io.home-assistant.sound(name=p_name).state()
  #_[utterances=["when the state of the ${p_name} sound sensor changes"]];

  stream (p_name : String, p_state : Enum(detecting, not_detecting)) := edge( monitor @io.home-assistant.sound(name=p_name).state()) on (state == p_state)
  #_[utterances=["when the ${p_name} sound sensor turns ${p_state}",
                "when the ${p_name} sound sensor changes to ${p_state}",
                "if the ${p_name} sound sensor becomes ${p_state}",
                "if the ${p_name} sound sensor is ${p_state}",
                "if the ${p_name} sound sensor turns ${p_state}"]];

  stream (p_name : String) := edge( monitor @io.home-assistant.sound(name=p_name).state()) on (state == enum(detecting))
  #_[utterances=["when the ${p_name} sound sensor detects sound",
                "if the ${p_name} sound sensor detects sound"]];

  stream (p_name : String) := edge( monitor @io.home-assistant.sound(name=p_name).state()) on (state == enum(not_detecting))
  #_[utterances=["when the ${p_name} sound sensor stops detecting sound",
                "if the ${p_name} sound sensor is not detecting sound"]];
}