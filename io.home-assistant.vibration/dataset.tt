dataset @io.home-assistant.vibration language "en" {

  program := now => @io.home-assistant.vibration.state() => notify
  #_[utterances=["is the vibration sensor detecting?",
                 "is the vibration sensor vibrating?",
                 "is the vibration sensor stationary?",
                 "check if the vibration sensor is detecting vibration or not",
                 "check if the vibration sensor is vibrating or stationary"]];

  query := @io.home-assistant.vibration.state()
  #_[utterances=["the state of the vibration sensor",
                 "if the vibration sensor is detecting vibration or not",
                 "whether the vibration sensor is detecting",
                 "if the vibration sensor is shaking or not detecting vibration",
                 "whether the vibration sensor is shaking",
                 "whether the vibration sensor is moving or stationary"]];

  stream := monitor @io.home-assistant.vibration.state()
  #_[utterances=["when the state of the vibration sensor changes"]];

  stream (p_state : Enum(detecting, not_detecting)) := edge( monitor @io.home-assistant.vibration.state()) on (state == p_state)
  #_[utterances=["when the vibration sensor becomes ${p_state}",
                "when the vibration sensor is ${p_state}",
                "when the vibration sensor turns ${p_state}",
                "when the vibration sensor changes to ${p_state}"]];

  stream := edge( monitor @io.home-assistant.vibration.state()) on (state == enum(detecting))
  #_[utterances=["when the vibration sensor is detecting vibration",
                "if the vibration sensor is detecting vibration"]];

  stream := edge( monitor @io.home-assistant.vibration.state()) on (state == enum(not_detecting))
  #_[utterances=["when the vibration sensor is not detecting vibration",
                "if the vibration sensor is not detecting vibration"]];

  program (p_name : String) := now => @io.home-assistant.vibration(name=p_name).state() => notify
  #_[utterances=["is the ${p_name} vibration sensor detecting?",
                 "check if the ${p_name} vibration sensor is detecting vibration or not",
                 "is the ${p_name} vibration sensor not detecting?",
                 "check whether the ${p_name} vibration sensor is detecting"]];

  query (p_name : String) := @io.home-assistant.vibration(name=p_name).state()
  #_[utterances=["the state of the ${p_name} vibration sensor",
                 "if the ${p_name} vibration sensor is detecting vibration or not",
                 "whether the ${p_name} vibration sensor is detecting"]];

  stream (p_name : String) := monitor @io.home-assistant.vibration(name=p_name).state()
  #_[utterances=["when the state of the ${p_name} vibration sensor changes"]];

  stream (p_name : String, p_state : Enum(detecting, not_detecting)) := edge( monitor @io.home-assistant.vibration(name=p_name).state()) on (state == p_state)
  #_[utterances=["when the ${p_name} vibration sensor becomes ${p_state}",
                "when the ${p_name} vibration sensor is ${p_state}",
                "when the ${p_name} vibration sensor turns ${p_state}",
                "when the ${p_name} vibration sensor changes to ${p_state}"]];

  stream (p_name : String) := edge( monitor @io.home-assistant.vibration(name=p_name).state()) on (state == enum(detecting))
  #_[utterances=["when the ${p_name} vibration sensor is detecting vibration",
                "if the ${p_name} vibration sensor is detecting vibration",
                "when the ${p_name} vibration sensor becomes detecting vibration"]];

  stream (p_name : String) := edge( monitor @io.home-assistant.vibration(name=p_name).state()) on (state == enum(not_detecting))
  #_[utterances=["when the ${p_name} vibration sensor is not detecting vibration",
                "if the ${p_name} vibration sensor is not detecting vibration"]];
}