abstract class @org.thingpedia.iot.security-camera
#_[thingpedia_name="Security Camera and Related Sensors"]
#_[thingpedia_description="Interface for Security Camera and Related Sensors."]
#_[description="Interface for Security Camera and Related Sensors."]
#[license="BSD-3-Clause"]
#[license_gplcompatible=true]
#[subcategory="home"]
{
  monitorable query state(out state : Enum(detecting,not_detecting))
  #_[canonical="sensor state"]
  #_[confirmation="the state of $__device"]
  #_[formatted=["The sensor is ${state:enum} movement."]];

  monitorable query current_event(out start_time: Date,
                                  out has_sound: Boolean #_[prompt="Do you want events with sound?"],
                                  out has_motion: Boolean #_[prompt="Do you want events with motion?"],
                                  out has_person: Boolean #_[prompt="Do you want events with people in front of the camera?"],
                                  out picture_url: Entity(tt:picture))
  #_[canonical="current event on security camera"]
  #_[confirmation="the current event detected on $__device"]
  #_[confirmation_remote="the current event detected on $__person's $__device"]
  #_[formatted=[{type="code",code="function(argMap, hint, formatter) {\n    var timeString = formatter.dateAndTimeToString(argMap.start_time);\n\n    var title;\n    if (argMap.has_person)\n        title = `Person detected on your camera at ${timeString}`;\n    else if (argMap.has_sound && argMap.has_motion)\n        title = `Sound and motion detected on your camera at ${timeString}`;\n    else if (argMap.has_sound)\n        title = `Sound detected on your camera at ${timeString}`;\n    else if (argMap.has_motion)\n        title = `Motion detected on your camera at ${timeString}`;\n    else\n        title = `Something detected on your camera at ${timeString}`;\n    return title;\n}"}, {type="picture",url="${picture_url}"}]]
  #[poll_interval=0ms]
  #[doc="trigger on any new event detected by the camera, providing the start time of the event and a small gif"];

  action set_power(in req power: Enum(on,off) #_[prompt="Do you want to turn your device on or off?"])
  #_[canonical="set power on security device"]
  #_[confirmation="turn $power your $__device"]
  #_[confirmation_remote="turn $power $__person's $__device"]
  #[doc="turn security device on or off"];
}
