dataset @org.thingpedia.iot.thermostat language "en" {

    program := now => @org.thingpedia.iot.thermostat.humidity() => notify
    #_[utterances=["is it humid?",
                   "check if it is humid",
                   "what does my humidity sensor say?",
                   "how humid is it?",
                   "what is the level of humidity?",
                   "how high is the humidity?"]];

    stream := monitor @org.thingpedia.iot.thermostat.humidity()
    #_[utterances=["when the humidity changes"]];

    stream (p_state : Enum(humid, normal)) := edge( monitor @org.thingpedia.iot.thermostat.humidity()) on (state == p_state)
    #_[utterances=["when the humidity sensor says it is ${p_state}"]];

    stream := edge( monitor @org.thingpedia.iot.thermostat.humidity()) on (state == enum(humid))
    #_[utterances=["when it gets humid",
                   "when the humidity is high",
                   "when it gets very humid",
                   "when it starts getting super humid",
                   "when it is too humid in the area"]];

    stream := edge( monitor @org.thingpedia.iot.thermostat.humidity()) on (state == enum(normal))
    #_[utterances=["when the humidity is normal",
                   "when it is no longer humid",
                   "when it is not humid anymore"]];

    program := now => @org.thingpedia.iot.thermostat.temperature() => notify
    #_[utterances=["is the indoor temperature warm?",
                   "check if the indoor temperature is warm",
                   "is the indoor temperature cold?",
                   "check if the room temperature is warm or cold",
                   "what is the indoor temperature?",
                   "how high is the indoor temperature?"]];

    query := @org.thingpedia.iot.thermostat.temperature()
    #_[utterances=["the state of the room temperature",
                   "the room temperature",
                   "how high the room temperature is",
                   "if the inside temperature is warm or cold",
                   "whether the room temperature is warm or cold"]];

    stream := monitor @org.thingpedia.iot.thermostat.temperature()
    #_[utterances=["when the room temperature changes"]];

    action (p_value :Measure(C)) := @org.thingpedia.iot.thermostat.set_target_temperature(value=p_value)
    #_[utterances=["set temperature on my thermostat to $p_value",
                   "set my thermostat to ${p_value:const}",
                   "set the temperature to ${p_value:const} on my thermostat"]]
    #[name="SetTargetTemperatureOnThermostatWithValue"];

    action (p_low :Measure(C), p_high :Measure(C))  := @org.thingpedia.iot.thermostat.set_minmax_temperature(low=p_low, high=p_high)
    #_[utterances=["set the temperature between ${p_low:const} and ${p_high:const} on my thermostat",
                   "set the low temperature to $p_low on my thermostat , and the high to $p_high"]]
    #[name="SetMinimumMaximumTemperatureOnThermostatWithLowWithHigh"];

    action (p_mode :Enum(heat,cool,heat_cool,off)) := @org.thingpedia.iot.thermostat.set_hvac_mode(mode=p_mode)
    #_[utterances=["set my hvac to $p_mode"]]
    #[name="SetHvacModeOnThermostatWithMode"];

    query := @org.thingpedia.iot.thermostat.temperature()
    #_[utterances=["the temperature on my thermostat",
                   "the temperature in the room"]]
    #[name="GetTemperatureOnThermostat"];

    query := @org.thingpedia.iot.thermostat.humidity()
    #_[utterances=["the humidity reported by thermostat",
                   "the humidity",
                   "the humidity level",
                   "whether it is humid",
                   "if it is humid"]]
    #[name="GetHumidityOnThermostat"];

    query := @org.thingpedia.iot.thermostat.hvac_state()
    #_[utterances=["the state of my hvac",
                   "the state of my heater"]]
    #[name="GetHvacStateOnThermostat"];

    stream (p_value :Measure(C)) := edge (monitor (@org.thingpedia.iot.thermostat.temperature())) on value >= p_value
    #_[utterances=["when the temperature on my thermostat becomes greater than ${p_value}",
                   "when the temperature on my thermostat goes above ${p_value}",
                   "when the sensor measures a temperature hotter than ${p_value}",
                   "if the room temperature is higher than ${p_value}",
                   "when the indoor temperature goes above ${p_value}"]]
    #[name="MonitorGetTemperatureOnThermostatByValueGreaterThan"];

    stream (p_value :Measure(C)) := edge (monitor (@org.thingpedia.iot.thermostat.temperature())) on value <= p_value
    #_[utterances=["when the temperature on my thermostat becomes lower than ${p_value}",
                   "when the temperature on my thermostat goes below ${p_value}",
                   "when the sensor measures a temperature colder than ${p_value}",
                   "if the room temperature is lower than ${p_value}",
                   "when the indoor temperature goes below ${p_value}"]]
    #[name="MonitorGetTemperatureOnThermostatByValueLessThan"];

    action := @org.thingpedia.iot.thermostat.set_hvac_mode(mode=enum(off))
    #_[utterances=["turn the heating off"]]
    #[name="SetHvacModeOnThermostatWithModeOff"];

    action := @org.thingpedia.iot.thermostat.set_hvac_mode(mode=enum(heat))
    #_[utterances=["turn the heating on"]]
    #[name="SetHvacModeOnThermostatWithModeHeat"];

    action := @org.thingpedia.iot.thermostat.set_hvac_mode(mode=enum(cool))
    #_[utterances=["turn the ac on",
                   "turn the cooling system on"]]
    #[name="SetHvacModeOnThermostatWithModeCool"];

    stream (p_value :Number) := edge (monitor (@org.thingpedia.iot.thermostat.humidity())) on value >= p_value
    #_[utterances=["when the humidity in the room becomes greater than ${p_value}",
                   "when the room 's humidity is higher than ${p_value} percent",
                   "when the humidity goes above ${p_value} percent"]]
    #[name="MonitorGetHumidityOnThermostatByValueGreaterThan"];

    stream (p_value :Number) := edge (monitor (@org.thingpedia.iot.thermostat.humidity())) on value <= p_value
    #_[utterances=["when the humidity in the room goes below ${p_value}",
                   "when the humidity in the room decreases below ${p_value}",
                   "when the humidity inside is lower than ${p_value}",
                   "when the humidity in the area goes below ${p_value}"]]
    #[name="MonitorGetHumidityOnThermostatByValueLessThan"];

    action := @org.thingpedia.iot.thermostat.set_target_temperature(value=$?)
    #_[utterances=["change the temperature on my thermostat"]]
    #[name="SetTargetTemperatureOnThermostat"];

    action := @org.thingpedia.iot.thermostat.set_minmax_temperature(low=$?, high=$?)
    #_[utterances=["change the minimum and maximum temperatures on my thermostat"]]
    #[name="SetMinimumMaximumTemperatureOnThermostat"];

}