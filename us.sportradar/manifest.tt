class @almond.sports
#_[name="Universal Sports Skill"]
#_[description="Sports Skill combining multiple APIs to display sports news, scores, and stats"]

{
  import loader from @org.thingpedia.v2();
  import config from @org.thingpedia.config.none();

  monitorable list query get_todays_games_nba(out home_team: Entity(sportradar:nba_team) #_[canonical="home team"],
                                          out home_score: Number #_[canonical="home score"],
                                          out away_team: Entity(sportradar:nba_team) #_[canonical="away team"],
                                          out away_score: Number #_[canonical="away score"],
                                          out status: String #_[canonical="status"])
  #_[canonical="schedule for today's nba games"]
  #_[confirmation="NBA game "]
  #_[formatted=[{type="text",text="${away_team}: ${away_score} @ ${home_team}: ${home_score} Game Status: ${status}"}]]
  #_[confirmation_remote="NBA game"]
  #[poll_interval=300000ms]
  #[doc="Daily Schedule for all NBA teams"];

  monitorable list query get_todays_games_mlb(out home_team: Entity(sportradar:mlb_team) #_[canonical="home team"],
                                          out home_score: Number #_[canonical="home score"],
                                          out away_team: Entity(sportradar:nba_team) #_[canonical="away team"],
                                          out away_score: Number #_[canonical="away score"],
                                          out status: String #_[canonical="status"])
  #_[canonical="schedule for today's mlb games"]
  #_[confirmation="MLB game "]
  #_[formatted=[{type="text",text="${away_team}: ${away_score} @ ${home_team}: ${home_score} Game Status: ${status}"}]]
  #_[confirmation_remote="MLB game"]
  #[poll_interval=300000ms]
  #[doc="Daily Schedule for all MLB teams"];

  monitorable list query get_weekly_games_nfl(out home_team: Entity(sportradar:nfl_team) #_[canonical="home team"],
                                          out home_score: Number #_[canonical="home score"],
                                          out away_team: Entity(sportradar:nba_team) #_[canonical="away team"],
                                          out away_score: Number #_[canonical="away score"],
                                          out status: String #_[canonical="status"])
  #_[canonical="schedule for today's NFL games"]
  #_[confirmation="NFL game "]
  #_[formatted=[{type="text",text="${away_team}: ${away_score} @ ${home_team}: ${home_score} Game Status: ${status}"}]]
  #_[confirmation_remote="NFL game"]
  #[poll_interval=300000ms]
  #[doc="Daily Schedule for all NFL teams"];

  monitorable list query get_todays_games_nhl(out home_team: Entity(almond.sports:nhl_team) #_[canonical="home team"],
                                          out home_score: Number #_[canonical="home score"],
                                          out away_team: Entity(almond.sports:nhl_team) #_[canonical="away team"],
                                          out away_score: Number #_[canonical="away score"],
                                          out status: String #_[canonical="status"])
  #_[canonical="schedule for today's NHL games"]
  #_[confirmation="NHL game "]
  #_[formatted=[{type="text",text="${away_team}: ${away_score} @ ${home_team}: ${home_score} Game Status: ${status}"}]]
  #_[confirmation_remote="NHL game"]
  #[poll_interval=300000ms]
  #[doc="Daily Schedule for all NHL teams"];

  monitorable list query get_todays_games_eu_soccer(out home_team: Entity(sportradar:eu_soccer_team) #_[canonical="home team"],
                                          out away_team: Entity(sportradar:eu_soccer_team) #_[canonical="away team"],
                                          out status: String #_[canonical="status"])
  #_[canonical="schedule for today's EU Soccer games"]
  #_[confirmation="EU Soccer game "]
  #_[formatted=[{type="text",text="${away_team} @ ${home_team} Game Status: ${status}"}]]
  #_[confirmation_remote="EU Soccer game"]
  #[poll_interval=300000ms]
  #[doc="Daily Schedule for all EU Soccer teams"];

  monitorable query get_team_nba(in req team: Entity(sportradar:nba_team) #_[canonical="team"],
                             out result: String #_[canonical="result"],
    			     out divisionPos: Number,
    			     out divisionName: String,
    			     out conferencePos: Number,
    			     out conferenceName: String)
  #_[canonical="NBA game status on sportradar"]
  #_[confirmation="${team} game "]
  #_[formatted=[{type="text",text="${result}"},
    {type="text", text="The ${team} are currently #${divisionPos} in the ${divisionName} Division and #${conferencePos} in the ${conferenceName}"}]]
  #_[confirmation_remote="NBA game"]
  #[poll_interval=300000ms]
  #[doc="NBA games for a given team"];

  monitorable query get_team_mlb(in req team: Entity(sportradar:mlb_team) #_[canonical="team"],
                             out result: String #_[canonical="result"],
    			     out divisionPos: Number,
    			     out divisionName: String,
    			     out leaguePos: Number,
    			     out leagueName: String)
  #_[canonical="MLB game status on sportradar"]
  #_[confirmation="${team} game "]
  #_[formatted=[{type="text",text="${result}"},
    {type="text", text="The ${team} are currently #${divisionPos} in the ${divisionName} Division and #${leaguePos} in the ${leagueName}"}]]
  #_[confirmation_remote="${team} game"]
  #[poll_interval=300000ms]
  #[doc="MLB games for a given team"];

  monitorable query get_team_nfl(in req team: Entity(sportradar:nfl_team) #_[canonical="team"],
                             out result: String #_[canonical="result"])
  #_[canonical="NFL game status on sportradar"]
  #_[confirmation="${team} game "]
  #_[formatted=[{type="text",text="${result}"}]]
  #_[confirmation_remote="${team} game"]
  #[poll_interval=300000ms]
  #[doc="NFL games for a given team"];

  monitorable query get_team_nhl(in req team: Entity(almond.sports:nhl_team) #_[canonical="team"],
                             out result: String #_[canonical="result"],
    			     out divisionPos: Number,
    			     out divisionName: String,
    			     out leaguePos: Number,
    			     out leagueName: String)
  #_[canonical="NHL game status on sportradar"]
  #_[confirmation="${team} game "]
   #_[formatted=[{type="text",text="${result}"},
    {type="text", text="The ${team} are currently #${divisionPos} in the ${divisionName} Division and #${leaguePos} in the ${leagueName}"}]]
  #_[confirmation_remote="${team} game"]
  #[poll_interval=300000ms]
  #[doc="NHL games for a given team"];

  monitorable list query get_boxscore_nba(in req team: Entity(sportradar:nba_team) #_[canonical="team"],
                          out home_team: Entity(sportradar:nba_team) #_[canonical="home team"],
                          out home_score: Number #_[canonical="home score"],
                          out home_quarter1: Number #_[canonical="home quarter1"],
                          out home_quarter2: Number #_[canonical="home quarter2"],
                          out home_quarter3: Number #_[canonical="home quarter3"],
                          out home_quarter4: Number #_[canonical="home quarter4"],
                          out home_leading_scorer: String #_[canonical="home leading scorer"],
                          out away_team: Entity(sportradar:nba_team) #_[canonical="away team"],
                          out away_score: Number #_[canonical="away score"],
                          out away_quarter1: Number #_[canonical="away quarter1"],
                          out away_quarter2: Number #_[canonical="away quarter2"],
                          out away_quarter3: Number #_[canonical="away quarter3"],
                          out away_quarter4: Number #_[canonical="away quarter4"],
                          out away_leading_scorer: String #_[canonical="away leading scorer"],
                          out status_message: String #_[canonical="additional status message"])
  #_[canonical="nba boxscore on sportradar"]
  #_[confirmation="the box score for the ${team} game"]
  #_[formatted=[{type="text",text="${away_team}:${away_score} @ ${home_team}:${home_score}"},
    {type="text",text="First Quarter: ${away_quarter1} - ${home_quarter1} Second Quarter:  ${away_quarter2} - ${home_quarter2} Third Quarter: ${away_quarter3} - ${home_quarter3} Fourth Quarter: ${away_quarter4} - ${home_quarter4}"},
    {type="text",text="${home_team} leading scorer: ${home_leading_scorer} ${away_team} leading scorer: ${away_leading_scorer}"}, {type="text",text="${status_message}"}]]
  #_[confirmation_remote="the box score for the ${team} game"]
  #[poll_interval=300000ms]
  #[doc="NBA games for a given team"];

  monitorable list query get_boxscore_mlb(in req team: Entity(sportradar:mlb_team) #_[canonical="team"],
                          out home_team: Entity(sportradar:mlb_team) #_[canonical="home team"],
                          out home_score: Number #_[canonical="home score"],
                          out home_inning1: Number #_[canonical="home inning 1"],
                          out home_inning2: Number #_[canonical="home inning 2"],
                          out home_inning3: Number #_[canonical="home inning 3"],
                          out home_inning4: Number #_[canonical="home inning 4"],
    		          out home_inning5: Number #_[canonical="home inning 5"],
                          out home_inning6: Number #_[canonical="home inning 6"],
                          out home_inning7: Number #_[canonical="home inning 7"],
                          out home_inning8: Number #_[canonical="home inning 8"],
    			  out home_inning9: Number #_[canonical="home inning 9"],
                          out home_starting_pitcher: String #_[canonical="home starting pitcher"],
                          out away_team: Entity(sportradar:mlb_team) #_[canonical="away team"],
                          out away_score: Number #_[canonical="away score"],
                          out away_inning1: Number #_[canonical="away inning 1"],
                          out away_inning2: Number #_[canonical="away inning 2"],
                          out away_inning3: Number #_[canonical="away inning 3"],
                          out away_inning4: Number #_[canonical="away inning 4"],
    		          out away_inning5: Number #_[canonical="away inning 5"],
                          out away_inning6: Number #_[canonical="away inning 6"],
                          out away_inning7: Number #_[canonical="away inning 7"],
                          out away_inning8: Number #_[canonical="away inning 8"],
    			  out away_inning9: Number #_[canonical="away inning 9"],
                          out away_starting_pitcher: String #_[canonical="away starting pitcher"],
                          out status_message: String #_[canonical="additional status message"])
  #_[canonical="MLB boxscore on sportradar"]
  #_[confirmation="the box score for the ${team} game"]
  #_[formatted=[{type="text",text="${away_team}:${away_score} @ ${home_team}:${home_score}"},
    {type="text",text="First Inning: ${away_inning1} - ${home_inning1} Second Inning: ${away_inning2} - ${home_inning2} Third Inning: ${away_inning3} - ${home_inning3} Fourth Inning: ${away_inning4} - ${home_inning4} Fifth Inning: ${away_inning5} - ${home_inning5} Sixth Inning: ${away_inning6} - ${home_inning6} Seventh Inning: ${away_inning7} - ${home_inning7} Eighth Inning: ${away_inning8} - ${home_inning8} Ninth Inning: ${away_inning9} - ${home_inning9}"},
    {type="text",text="${home_team} starting pitcher: ${home_starting_pitcher} ${away_team} starting pitcher: ${away_starting_pitcher}"},
    {type="text",text="${status_message}"}]]
  #_[confirmation_remote="the box score for the ${team} game"]
  #[poll_interval=300000ms]
  #[doc="MLB boxscore for a given team"];

  monitorable list query get_boxscore_nfl(in req team: Entity(sportradar:nfl_team) #_[canonical="team"],
                          out home_team: Entity(sportradar:nfl_team) #_[canonical="home team"],
                          out home_score: Number #_[canonical="home score"],
                          out home_quarter1: Number #_[canonical="home quarter1"],
                          out home_quarter2: Number #_[canonical="home quarter2"],
                          out home_quarter3: Number #_[canonical="home quarter3"],
                          out home_quarter4: Number #_[canonical="home quarter4"],
                          out away_team: Entity(sportradar:nfl_team) #_[canonical="away team"],
                          out away_score: Number #_[canonical="away score"],
                          out away_quarter1: Number #_[canonical="away quarter1"],
                          out away_quarter2: Number #_[canonical="away quarter2"],
                          out away_quarter3: Number #_[canonical="away quarter3"],
                          out away_quarter4: Number #_[canonical="away quarter4"],
                          out status_message: String #_[canonical="additional status message"])

  #_[canonical="NFL boxscore on sportradar"]
  #_[confirmation="the box score for the ${team} game"]
  #_[formatted=[{type="text",text="${away_team}:${away_score} @ ${home_team}:${home_score}"},
    {type="text",text="First Quarter: ${away_quarter1} - ${home_quarter1} Second Quarter:  ${away_quarter2} - ${home_quarter2} Third Quarter: ${away_quarter3} - ${home_quarter3} Fourth Quarter: ${away_quarter4} - ${home_quarter4}"},
    {type="text",text="${status_message}"}]]
  #_[confirmation_remote="the box score for the ${team} game"]
  #[poll_interval=300000ms]
  #[doc="NFL boxscores for a given team"];

  monitorable list query get_boxscore_nhl(in req team: Entity(almond.sports:nhl_team) #_[canonical="team"],
                          out home_team: Entity(almond.sports:nhl_team) #_[canonical="home team"],
                          out home_score: Number #_[canonical="home score"],
                          out home_period1: Number #_[canonical="home period1"],
                          out home_period2: Number #_[canonical="home period2"],
                          out home_period3: Number #_[canonical="home period3"],
    			  out home_leading_scorer: String #_[canonical="home leading scorer"],
                          out away_team: Entity(almond.sports:nhl_team) #_[canonical="away team"],
                          out away_score: Number #_[canonical="away score"],
                          out away_period1: Number #_[canonical="away period1"],
                          out away_period2: Number #_[canonical="away period2"],
                          out away_period3: Number #_[canonical="away period3"],
     			  out away_leading_scorer: String #_[canonical="away leading scorer"],
                          out status_message: String #_[canonical="additional status message"])

  #_[canonical="NHL boxscore on sportradar"]
  #_[confirmation="the box score for the ${team} game"]
  #_[formatted=[{type="text",text="${away_team}:${away_score} @ ${home_team}:${home_score}"},
    {type="text",text="First Period: ${away_period1} - ${home_period1} Second Period: ${away_period2} - ${home_period2} Third Period: ${away_period3} - ${home_period3}"},
    {type="text",text="${home_team} leading scorer: ${home_leading_scorer} ${away_team} leading scorer: ${away_leading_scorer}"}, {type="text",text="${status_message}"}]]
  #_[confirmation_remote="the box score for the ${team} game"]
  #[poll_interval=300000ms]
  #[doc="NHL boxscores for a given team"];

  monitorable list query get_team_eu_soccer(in req team: Entity(sportradar:eu_soccer_team) #_[canonical="team"],
                          out home_team: Entity(sportradar:eu_soccer_team) #_[canonical="home team"],
                          out home_score: Number #_[canonical="home score"],
                          out home_half1: Number #_[canonical="home half1"],
                          out home_half2: Number #_[canonical="home half2"],
                          out away_team: Entity(sportradar:eu_soccer_team) #_[canonical="away team"],
                          out away_score: Number #_[canonical="away score"],
                          out away_half1: Number #_[canonical="away half1"],
                          out away_half2: Number #_[canonical="away half2"],
                       	  out match_status: String #_[canonical="status of the match"],
                          out status_message: String #_[canonical="additional status message"])

  #_[canonical="EU Soccer boxscore on sportradar"]
  #_[confirmation="the box score for the ${team} game"]
  #_[formatted=[{type="text",text="${away_team}:${away_score} @ ${home_team}:${home_score}"},
    {type="text",text="First Half: ${away_half1} - ${home_half1} Second Half: ${away_half2} - ${home_half2} ${match_status}"},
    {type="text",text="${status_message}"}]]
  #_[confirmation_remote="the box score for the ${team} game"]
  #[poll_interval=300000ms]
  #[doc="EU Soccer boxscores for a given team"];

  monitorable list query get_team_am_soccer(in req team: Entity(sportradar:us_soccer_team) #_[canonical="team"],
                          out home_team: Entity(sportradar:us_soccer_team) #_[canonical="home team"],
                          out home_score: Number #_[canonical="home score"],
                          out home_half1: Number #_[canonical="home half1"],
                          out home_half2: Number #_[canonical="home half2"],
                          out away_team: Entity(sportradar:us_soccer_team) #_[canonical="away team"],
                          out away_score: Number #_[canonical="away score"],
                          out away_half1: Number #_[canonical="away half1"],
                          out away_half2: Number #_[canonical="away half2"],
                       	  out match_status: String #_[canonical="status of the match"],
                          out status_message: String #_[canonical="additional status message"])

  #_[canonical="AM Soccer boxscore on sportradar"]
  #_[confirmation="the box score for the ${team} game"]
  #_[formatted=[{type="text",text="${away_team}:${away_score} @ ${home_team}:${home_score}"},
    {type="text",text="First Half: ${away_half1} - ${home_half1} Second Half: ${away_half2} - ${home_half2} ${match_status}"},
    {type="text",text="${status_message}"}]]
  #_[confirmation_remote="the box score for the ${team} game"]
  #[poll_interval=300000ms]
  #[doc="AM Soccer boxscores for a given team"];

  monitorable list query get_rankings_eu_soccer(in req soccer_league:String #_[canonical="team"],
    			  out team_name:Entity(sportradar:eu_soccer_team) #_[canonical="soccer team"],
    			  out team_rank:Number #_[canonical="team rank"],
    			  out group_name: String #_[canonical="group name"])

  #_[canonical="EU Soccer league rankings on sportradar"]
  #_[confirmation="the league rankings for ${soccer_league}"]
  #_[formatted=[{type="text", text="${team_rank}: ${team_name}"}, {type="text", text="${group_name}"}]]
  #_[confirmation_remote="the league rankings for ${soccer_league}"]
  #[poll_interval=300000ms]
  #[doc="EU Soccer league rankings for a given league"];

  monitorable list query get_rankings_am_soccer(in req soccer_league:String #_[canonical="team"],
    			  out team_name:Entity(sportradar:us_soccer_team) #_[canonical="soccer team"],
    			  out team_rank:Number #_[canonical="team rank"],
    			  out group_name: String #_[canonical="group name"])

  #_[canonical="AM Soccer league rankings on sportradar"]
  #_[confirmation="the league rankings for ${soccer_league}"]
  #_[formatted=[{type="text", text="${team_rank}: ${team_name}"}, {type="text", text="${group_name}"}]]
  #_[confirmation_remote="the league rankings for ${soccer_league}"]
  #[poll_interval=300000ms]
  #[doc="AM Soccer league rankings for a given league"];



  monitorable list query get_sports_headlines(in req sport_league: String #_[canonical="sport league"],
    					   out link: Entity(tt:url) #_[canonical="link"],
                                           out title: String #_[canonical="title"] #[string_values="tt:news_title"],
                                           out description: String #_[canonical="title"] #[string_values="tt:news_description"])
  #_[canonical="Sports articles"]
  #_[confirmation="get articles belonging to the league ${sport_league}"]
  #_[formatted=[{type="rdl",webCallback="${link}",displayTitle="${title}",displayText="${description}"}]]
  #_[confirmation_remote="Sports articles"]
  #[poll_interval=300000ms]
  #[doc="trigger on new articles"];
}
